<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - OP_CODESEPARATOR Re: BIP Proposal: The Great Consensus Cleanup</title>
  <updated>2023-05-20T19:57:58.337497+00:00</updated>
  <author>
    <name>Matt Corallo 2019-03-07 19:50:52</name>
  </author>
  <author>
    <name>Matt Corallo 2019-03-12 21:08:39</name>
  </author>
  <author>
    <name>Matt Corallo 2019-03-08 18:35:42</name>
  </author>
  <author>
    <name>Gregory Maxwell 2019-03-13 00:54:23</name>
  </author>
  <author>
    <name>Matt Corallo 2019-03-12 02:23:33</name>
  </author>
  <author>
    <name>Matt Corallo 2019-03-08 20:14:02</name>
  </author>
  <link href="bitcoin-dev/March_2019/016722_OP-CODESEPARATOR-Re-BIP-Proposal-The-Great-Consensus-Cleanup.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2019/016758_OP-CODESEPARATOR-Re-BIP-Proposal-The-Great-Consensus-Cleanup.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2019/016733_OP-CODESEPARATOR-Re-BIP-Proposal-The-Great-Consensus-Cleanup.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2019/016762_OP-CODESEPARATOR-Re-BIP-Proposal-The-Great-Consensus-Cleanup.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2019/016752_OP-CODESEPARATOR-Re-BIP-Proposal-The-Great-Consensus-Cleanup.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2019/016736_OP-CODESEPARATOR-Re-BIP-Proposal-The-Great-Consensus-Cleanup.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - OP_CODESEPARATOR Re: BIP Proposal: The Great Consensus Cleanup</title>
    <updated>2023-05-20T19:57:58.337497+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-March/016722.html" rel="alternate"/>
    <summary>The discussion in this context revolves around the OP_CODESEPARATOR mechanism in Bitcoin. This allows users to sign for a specific branch in scripts with multiple conditions. However, it represents a significant vulnerability in Bitcoin today, and no practical use-case for the mechanism has been found so far, except for one example of making SegWit scripts slightly more efficient in TumbleBit.The proposal is to remove OP_CODESEPARATOR due to its non-standard nature and vulnerability risks. However, concerns have been raised about the potential impact on users who may have existing transactions reliant on this feature. In response, suggestions have been made to increase the weight of transactions with OP_CODESEPARATOR, limit the number of executions per script, or put it in a deprecated state for some time.It has also been noted that extensive research has unearthed zero users relying on the feature, and caution should be taken to avoid confiscating user funds. Non-standardness is not an excuse to take other people's tied-up funds and destroy them permanently. Still, non-standardness can make soft-forking something out safer by derisking miners not upgrading right away and signal something that may be a candidate for soft-forking out so that we get feedback.While arguments on both sides hold merit, it's worth considering what would benefit the system most, reduce potential risks, and allow efforts to be allocated elsewhere. Finding another way to fix the vulnerability that limits the risks of destroying other people's money while ensuring that users who rely on OP_CODESEPARATOR are not adversely affected is crucial. Any new proposals must not render some transactions unspendable and add implementation complexity.</summary>
    <published>2019-03-07T19:50:52+00:00</published>
  </entry>
</feed>
