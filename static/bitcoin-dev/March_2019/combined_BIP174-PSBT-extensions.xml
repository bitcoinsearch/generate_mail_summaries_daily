<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP174 / PSBT extensions</title>
  <updated>2023-05-20T19:50:46.984554+00:00</updated>
  <author>
    <name>Gregory Maxwell 2019-03-08 00:40:00</name>
  </author>
  <author>
    <name>Andrew Chow 2019-03-07 15:34:26</name>
  </author>
  <author>
    <name>Andrew Poelstra 2019-03-06 18:08:00</name>
  </author>
  <link href="bitcoin-dev/March_2019/016729_BIP174-PSBT-extensions.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2019/016720_BIP174-PSBT-extensions.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2019/016713_BIP174-PSBT-extensions.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP174 / PSBT extensions</title>
    <updated>2023-05-20T19:50:46.984554+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-March/016729.html" rel="alternate"/>
    <summary>The Bitcoin-Dev mailing list recently had a discussion about the possibility of introducing proprietary extensions to PSBT. Andrew Poelstra, Director of Research at Blockstream, suggested several changes to the current PSBT protocol that he found useful for developers. These changes included adding a field to the global table containing only the txid of an unsigned transaction and a versioning field to allow for more reasonable error messages. However, Andrew Chow disagreed with this suggestion as it would break the central idea of PSBT that a PSBT contains everything required to construct a transaction.Other proposed changes included adding fields to per-input tables for confirmed depth of referenced txout, map from SHA2 hashes to their 32-byte preimages, and maps from public keys to partial nonce commitments, partial nonces, and partial signatures, among others. There was also a suggestion to add "proprietary use" fields to every table, which are guaranteed not to be defined by any future PSBT extension, allowing specific users to differentiate their own PSBTs.Andrew Poelstra further initiated a discussion about an extension to BIP174, proposing the addition of some fields that he found useful when using PSBT in practice. He has listed the desired changes and plans to draft a formal proposal if the list is stable. The proposed changes include adding a field to PSBT_GLOBAL_UNSIGNED_TX for the global table, a version field to the global table, and fields to the per-input tables for confirmed depth of the referenced txout, a map from SHA2 hashes to their 32-byte preimages, a map from public keys to 32-byte "tweaks," maps from public keys to partial nonce commitments, partial nonces, and partial signatures, and a map from signatures (or signature nonces?) to sign-to-contract tweaks. Moreover, the proposal includes adding fields to the per-output tables for pay-to-contract and a family of fields to every table that is "proprietary use" and guaranteed not to be defined by any future PSBT extension. Specifically, every field with key-type 0xFF could be considered "proprietary." The special field in the global table whose key is only 0xFF should be a "proprietary version field" with unspecified semantics but an understanding that specific users might stick a GUID or something in there as a way to recognize their own PSBTs.</summary>
    <published>2019-03-08T00:40:00+00:00</published>
  </entry>
</feed>
