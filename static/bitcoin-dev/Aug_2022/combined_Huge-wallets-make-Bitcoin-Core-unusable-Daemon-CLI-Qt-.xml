<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Huge wallets make Bitcoin Core unusable (Daemon+CLI &amp; Qt)</title>
  <updated>2023-05-22T21:06:35.746224+00:00</updated>
  <author>
    <name>Andrew Chow 2022-08-20 15:10:57</name>
  </author>
  <author>
    <name>micaroni at gmail.com 2022-08-20 14:16:53</name>
  </author>
  <link href="bitcoin-dev/Aug_2022/020880_Huge-wallets-make-Bitcoin-Core-unusable-Daemon-CLI-Qt-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2022/020878_Huge-wallets-make-Bitcoin-Core-unusable-Daemon-CLI-Qt-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Huge wallets make Bitcoin Core unusable (Daemon+CLI &amp; Qt)</title>
    <updated>2023-05-22T21:06:35.746224+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-August/020880.html" rel="alternate"/>
    <summary>The issue being discussed is the degradation in performance of a wallet module in Bitcoin Core when it reaches a certain size. The post mentions a specific case where the wallet had 2.079.337 transactions and 446.503 generated addresses, causing most commands such as "getbalance", "walletpassphrase" and "getreceivedbyaddress" to time out. Even increasing the timeout or RPC threads worsened the situation. The wallet feature becomes almost useless for both end users and production servers, leading to the question of whether the wallet feature should be removed entirely if no improvements can be made. The current solution of creating a new wallet and sending funds there periodically is not ideal and raises privacy concerns. The post suggests some possible solutions, including caching the entire wallet in memory and code optimization. The removeprunedfunds RPC can also be used to remove old transactions and speed up balance calculations and transaction creation. There are also questions raised about optimizing the cache usage, reducing the wallet size, ignoring old addresses, improving I/O treatment and CPU usage, and implementing an "archive" command that automatically moves funds from a large wallet to a new one. Possible related issues and tests are also provided in the post, along with a bug where an old balance is displayed even after moving funds to a new wallet.</summary>
    <published>2022-08-20T15:10:57+00:00</published>
  </entry>
</feed>
