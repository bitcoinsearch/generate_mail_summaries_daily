<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Taproot testnet wallet</title>
  <updated>2023-05-22T15:55:39.782530+00:00</updated>
  <author>
    <name>Pieter Wuille 2021-10-09 16:49:42</name>
  </author>
  <author>
    <name>Anthony Towns 2021-10-15 01:05:12</name>
  </author>
  <author>
    <name>Andreas Schildbach 2021-10-09 15:36:47</name>
  </author>
  <link href="bitcoin-dev/Oct_2021/019533_Taproot-testnet-wallet.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2021/019543_Taproot-testnet-wallet.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2021/019532_Taproot-testnet-wallet.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Taproot testnet wallet</title>
    <updated>2023-05-22T15:55:39.782530+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019533.html" rel="alternate"/>
    <summary>Andreas Schildbach is seeking a testnet wallet that can receive to P2TR and spend back. He has been trying to get a taproot address from Bitcoin Core 22.0 without success. Pieter Wuille suggested constructing a taproot-capable wallet in Bitcoin Core by creating a descriptor wallet, importing a taproot descriptor, and getting a new address with addresstype=bech32m. Wuille also provided step-by-step instructions on how to construct the taproot descriptor per BIP 86. This process is deliberately cumbersome prior to taproot activating on mainnet; once that happens and PR#22364 is merged, only steps (1) and (5) will be required.</summary>
    <published>2021-10-09T16:49:42+00:00</published>
  </entry>
</feed>
