<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [PULL] Add scriptPubKey enforced sendescrow and redeemescrow API calls</title>
  <updated>2023-05-26T18:17:20.549193+00:00</updated>
  <author>
    <name>Mike Hearn 2011-06-22 14:49:51</name>
  </author>
  <author>
    <name>bgroff at lavabit.com 2011-06-22 16:01:47</name>
  </author>
  <author>
    <name>Mike Hearn 2011-06-22 16:02:05</name>
  </author>
  <author>
    <name>bgroff at lavabit.com 2011-06-16 04:53:40</name>
  </author>
  <author>
    <name>Mike Hearn 2011-06-22 16:02:05</name>
  </author>
  <author>
    <name>bgroff at lavabit.com 2011-06-16 04:53:40</name>
  </author>
  <author>
    <name>Mike Hearn 2011-06-22 14:49:51</name>
  </author>
  <author>
    <name>Mike Hearn 2011-06-22 16:02:05</name>
  </author>
  <author>
    <name>Mike Hearn 2011-06-22 13:42:11</name>
  </author>
  <author>
    <name>Gavin Andresen 2011-06-22 14:08:05</name>
  </author>
  <author>
    <name>bgroff at lavabit.com 2011-06-22 16:23:46</name>
  </author>
  <author>
    <name>bgroff at lavabit.com 2011-06-22 19:33:12</name>
  </author>
  <author>
    <name>Mike Hearn 2011-06-22 13:24:36</name>
  </author>
  <author>
    <name>Mike Hearn 2011-06-22 13:42:11</name>
  </author>
  <author>
    <name>Gavin Andresen 2011-06-22 14:08:05</name>
  </author>
  <author>
    <name>Gavin Andresen 2011-06-22 15:32:49</name>
  </author>
  <author>
    <name>bgroff at lavabit.com 2011-06-22 16:01:47</name>
  </author>
  <author>
    <name>bgroff at lavabit.com 2011-06-22 19:33:12</name>
  </author>
  <author>
    <name>bgroff at lavabit.com 2011-06-16 04:53:40</name>
  </author>
  <author>
    <name>Gavin Andresen 2011-06-22 15:32:49</name>
  </author>
  <author>
    <name>bgroff at lavabit.com 2011-06-22 16:01:47</name>
  </author>
  <author>
    <name>bgroff at lavabit.com 2011-06-22 19:33:12</name>
  </author>
  <author>
    <name>bgroff at lavabit.com 2011-06-22 20:44:38</name>
  </author>
  <author>
    <name>Mike Hearn 2011-06-22 13:24:36</name>
  </author>
  <author>
    <name>Gavin Andresen 2011-06-22 15:32:49</name>
  </author>
  <author>
    <name>bgroff at lavabit.com 2011-06-22 20:44:38</name>
  </author>
  <author>
    <name>Mike Hearn 2011-06-22 14:49:51</name>
  </author>
  <author>
    <name>bgroff at lavabit.com 2011-06-22 16:23:46</name>
  </author>
  <author>
    <name>bgroff at lavabit.com 2011-06-22 20:44:38</name>
  </author>
  <author>
    <name>Mike Hearn 2011-06-22 13:24:36</name>
  </author>
  <author>
    <name>Mike Hearn 2011-06-22 13:42:11</name>
  </author>
  <author>
    <name>Gavin Andresen 2011-06-22 14:08:05</name>
  </author>
  <author>
    <name>bgroff at lavabit.com 2011-06-22 16:23:46</name>
  </author>
  <link href="bitcoin-dev/June_2011/000055_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000057_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000058_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000026_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000058_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000026_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000055_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000058_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000052_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000053_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000059_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000060_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000051_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000052_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000053_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000056_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000057_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000060_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000026_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000056_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000057_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000060_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000061_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000051_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000056_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000061_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000055_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000059_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000061_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000051_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000052_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000053_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000059_-PULL-Add-scriptPubKey-enforced-sendescrow-and-redeemescrow-API-calls.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [PULL] Add scriptPubKey enforced sendescrow and redeemescrow API calls</title>
    <updated>2023-05-26T18:17:20.549520+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-June/000055.html" rel="alternate"/>
    <summary>The Bitcoin developers are discussing the implementation of MULTISIG transactions and experimenting with them on testnet. Mike asks about the best way to implement MULTISIG transactions, but Bobby Groff says that Satoshi didn't tell him much about it. However, he has written up half of what he was told by Satoshi and still has some details left to go through. They discuss whether hard-coding new standard script templates in script.cpp Solver() would be the right approach to support 1/2 of 2 and 1/2/3 of 3 signatures. Bobby suggests that it would be better to just have a bit of custom logic that checks if the script is of the right form. They also talk about the possibility of having a generic OP_N and whether it makes sense to just support 2-of-2 and 2-of-3 for now. Given the costs involved with adding new transaction types, allowing any number of signatures up to the max would be a better approach, according to Bobby.Bobby explains that he doesn't understand the purpose of the new type of bitcoin payment address. He thinks that establishing a higher-level protocol would be needed to trigger such a transaction via the UI. For instance, it's not safe to use escrow until you've checked that the escrow key is owned by who you think it is. There needs to be some kind of protocol (probably HTTP based) where the buyer communicates to the merchant a list of acceptable escrow agencies, etc., before initiating the transaction. Bobby says that he is most interested in the 2-of-2 case because he thinks merchants and exchanges need bitcoin deposit/payment addresses that they can make secure by requiring a 2-step signature process for spending those funds. Gavin Andresen suggests the creation of an "m of n address" that would require m out of n signatures to redeem. He proposes using a really long address with all public keys or hashing the sum of public keys. Bobby Groff agrees and renames escrow transactions as multisign or multipay transactions. However, they later realize that distributing each party's pubkey ahead of time for multisig transactions is not workable, otherwise, there is a risk that a party falls off the face of the earth and then you can't provide the pubkeys to have hash(pubkey1+2+3) EQUALVERIFY.The proposal includes a use case where an escrow is set up, requiring m of n signatures to release funds, and the other n-1 parties securely provide their public keys. It is suggested that a higher level protocol for pay-to-escrow should be established, similar to pay-to-single-party. It is debated whether or not the straightforward "n PUBKEYS m CHECKMULTISIG" transaction type is the correct approach, and it's suggested that instead, 2 of 2 and 2 of 3 should be implemented using standard transaction types. Finally, the implementation is deemed too complicated and reduced to a simple output script of 2 3 CHECKMULTISIGVERIFY.Mike Hearn suggests experimenting with MULTISIG transactions on testnet and discusses implementing new standard script templates in the script.cpp solver() function. Gavin Andresen also suggests a "higher level protocol" for pay-to-escrow to receive a bitcoin address via a secure mechanism. He proposes different transaction types for 2-of-2 and 2-of-3 and discusses the advantages and disadvantages of summing the public keys versus using HASH160.In summary, the discussion revolves around the creation of a new type of Bitcoin payment address for "multisign" transactions that require multiple signatures to redeem. They debate the best approach to implementing these transactions, with some suggesting hard-coding new standard script templates while others suggest allowing any number of signatures up to the maximum. The proposed use cases include escrow, immediate payment, and funds locked with multi-party signatures. A higher level protocol for pay-to-escrow is suggested, and there is debate over the best transaction types to use for 2-of-2 and 2-of-3 scenarios. Finally, they settle on a simple output script of 2 3 CHECKMULTISIGVERIFY.</summary>
    <published>2011-06-22T14:49:51+00:00</published>
  </entry>
</feed>
