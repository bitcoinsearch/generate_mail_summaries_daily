<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Bumping up against flood control limits again?</title>
  <updated>2023-05-26T18:06:45.459769+00:00</updated>
  <author>
    <name>Mike Hearn 2011-06-14 16:44:41</name>
  </author>
  <author>
    <name>Mike Hearn 2011-06-14 16:44:41</name>
  </author>
  <author>
    <name>Dave Smith 2011-06-14 17:07:59</name>
  </author>
  <author>
    <name>Jeff Garzik 2011-06-14 17:14:21</name>
  </author>
  <author>
    <name>Mike Hearn 2011-06-14 16:44:41</name>
  </author>
  <author>
    <name>Dave Smith 2011-06-14 17:07:59</name>
  </author>
  <author>
    <name>Dave Smith 2011-06-14 17:07:59</name>
  </author>
  <author>
    <name>Jeff Garzik 2011-06-14 17:14:21</name>
  </author>
  <author>
    <name>Jeff Garzik 2011-06-14 17:14:21</name>
  </author>
  <link href="bitcoin-dev/June_2011/000015_Bumping-up-against-flood-control-limits-again-.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000015_Bumping-up-against-flood-control-limits-again-.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000016_Bumping-up-against-flood-control-limits-again-.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000017_Bumping-up-against-flood-control-limits-again-.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000015_Bumping-up-against-flood-control-limits-again-.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000016_Bumping-up-against-flood-control-limits-again-.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000016_Bumping-up-against-flood-control-limits-again-.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000017_Bumping-up-against-flood-control-limits-again-.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2011/000017_Bumping-up-against-flood-control-limits-again-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Bumping up against flood control limits again?</title>
    <updated>2023-05-26T18:06:45.459874+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-June/000015.html" rel="alternate"/>
    <summary>Block sizes in the Bitcoin protocol are becoming a scalability issue. During testing of chain download, the user was disconnected because they exceeded the 10mb flood control limit. This flood control is a serious limitation for scalability, and solutions include raising the limit or simultaneously lowering the batch size. However, these solutions may hurt chain download speed in high latency environments. The flood limit could be based on size in bytes rather than the number of blocks.Furthermore, the P2P code was not written for large amounts of streaming data and requires improvement. Jeff Garzik noted that this is an unfortunate relic of how bitcoin P2P code is written. If the remote side has reduced their TCP window to zero, bitcoin will still buffer so that it may continue processing other P2P traffic from other nodes. That makes sense in the case of tiny, 31-byte address messages but not huge block chain download messages. The main goal was not flood control but preventing an internal buffer memory explosion. HTTP servers certainly don't buffer huge amounts in memory; they would keel over if so. HTTP servers have been working on the reverse, in fact: moving the data-pushing over to sendfile(2) syscall and similar optimizations. We already have the block chain on disk, so in theory, if we can eliminate the outgoing network buffer and simply use a pointer into the block chain file, we can send as much data as we want.Overall, block sizes need to be addressed to prevent further scalability issues. Mike Hearn wrote about this problem on June 14, 2011, noting that block sizes in the Bitcoin protocol had started to get quite large once again. The P2P code needs some serious thinking as it was not designed for huge amounts of streaming data. By eliminating the outgoing network buffer and using a pointer into the block chain file, we could send as much data as we want.</summary>
    <published>2011-06-14T16:44:41+00:00</published>
  </entry>
</feed>
