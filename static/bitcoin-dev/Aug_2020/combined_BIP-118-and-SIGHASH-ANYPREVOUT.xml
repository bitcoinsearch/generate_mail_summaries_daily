<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP 118 and SIGHASH_ANYPREVOUT</title>
  <updated>2023-05-20T23:34:51.400673+00:00</updated>
  <author>
    <name>Matt Corallo 2020-08-11 00:14:29</name>
  </author>
  <author>
    <name>Matt Corallo 2020-08-06 15:58:53</name>
  </author>
  <author>
    <name>Anthony Towns 2020-07-09 22:30:50</name>
  </author>
  <author>
    <name>Anthony Towns 2020-07-09 21:40:48</name>
  </author>
  <author>
    <name>Matt Corallo 2020-08-04 13:10:02</name>
  </author>
  <author>
    <name>Richard Myers 2020-08-03 19:27:13</name>
  </author>
  <link href="bitcoin-dev/Aug_2020/018079_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018077_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018039_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018038_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018075_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018069_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP 118 and SIGHASH_ANYPREVOUT</title>
    <updated>2023-05-20T23:34:51.400673+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-August/018079.html" rel="alternate"/>
    <summary>The email conversation between Anthony Towns and Christian Decker is about updating BIP 118 to include ANYPREVOUT bip. The updated BIP text is available on GitHub for discussion, but tested code is not yet available.Issues with HTLC security were discussed, specifically relay-based attacks. ZmnSCPxj suggested dropping channels on-chain early to allow for leeway in bumping up fees for the commitment transaction. Matt added that placing commitment transactions in mempools may put HTLC security at risk. Instead, ZmnSCPxj proposed monitoring on-chain events instead of mempool events and implementing scorch-the-earth, keep-bumping-the-fee strategies.In a discussion on Lightning-dev mailing list, ZmnSCPxj proposed a Decker-Russell-Osuntokun construction with a single internal Taproot pubkey for a channel between two parties, A and B. The funding outpoint would be spent with a taprooted P and a single tapscript `OP_CHECKSIG`. Update transactions would be signed with the internal taproot pubkey using `SIGHASH_ANYPREVOUTANYSCRIPT`, while each update transaction would have monotonically-increasing `nLockTime`. State transaction would be signed with the internal taproot pubkey using `SIGHASH_ANYPREVOUT` committing to a unique script.There was also a discussion about a feasible attack vector involving broadcasting different old transactions to the victim and miners separately. However, this attack vector could be fixed by monitoring on-chain events and ignoring mempool events in a Lightning universe utilizing primarily `SIGHASH_NOINPUT`-based mechanisms.Richard raised questions related to privacy and signing session requirements.</summary>
    <published>2020-08-11T00:14:29+00:00</published>
  </entry>
</feed>
