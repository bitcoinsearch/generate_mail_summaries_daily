<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - New side channel attack that can recover Bitcoin keys</title>
  <updated>2023-05-19T18:14:38.470434+00:00</updated>
  <author>
    <name>Pieter Wuille 2014-03-05 12:56:05</name>
  </author>
  <author>
    <name>Gregory Maxwell 2014-03-09 01:57:46</name>
  </author>
  <author>
    <name>Gregory Maxwell 2014-03-05 22:25:02</name>
  </author>
  <author>
    <name>Gregory Maxwell 2014-03-05 21:44:30</name>
  </author>
  <author>
    <name>Gregory Maxwell 2014-03-05 20:54:04</name>
  </author>
  <author>
    <name>Gregory Maxwell 2014-03-05 19:51:25</name>
  </author>
  <author>
    <name>Pieter Wuille 2014-03-05 14:04:41</name>
  </author>
  <link href="bitcoin-dev/March_2014/004516_New-side-channel-attack-that-can-recover-Bitcoin-keys.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004581_New-side-channel-attack-that-can-recover-Bitcoin-keys.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004529_New-side-channel-attack-that-can-recover-Bitcoin-keys.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004525_New-side-channel-attack-that-can-recover-Bitcoin-keys.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004523_New-side-channel-attack-that-can-recover-Bitcoin-keys.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004521_New-side-channel-attack-that-can-recover-Bitcoin-keys.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004518_New-side-channel-attack-that-can-recover-Bitcoin-keys.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - New side channel attack that can recover Bitcoin keys</title>
    <updated>2023-05-19T18:14:38.470434+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004516.html" rel="alternate"/>
    <summary>The discussion revolves around the vulnerabilities of OpenSSL's secp256k1 implementation, specifically in relation to timing attacks. It is noted that there are no efforts currently being made to make it completely side-channel free, and even if OpenSSL were fixed, custom implementations probably would not be. However, libsecp256k1 has a nearly constant time/constant memory access multiply for signing, which should reduce exposure substantially. Branchless implementation of ECDSA would also significantly up the difficulty of an attack for a relatively low cost in program complexity, but it is important to note that branchless does not mean side-channel free, as uniform memory accesses are needed as well. The idea of blinding schemes to handle different private data is put forth as another layer of defense against side-channel attacks. Regardless, good security involves defense in depth, so adding on top of these things is important.</summary>
    <published>2014-03-05T12:56:05+00:00</published>
  </entry>
</feed>
