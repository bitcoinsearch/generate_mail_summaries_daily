<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [BIP draft] CHECKLOCKTIMEVERIFY - Prevent a txout from being spent until an expiration time</title>
  <updated>2023-05-19T19:20:21.660749+00:00</updated>
  <author>
    <name>Gregory Maxwell 2014-10-09 06:28:19</name>
  </author>
  <author>
    <name>Gregory Maxwell 2014-10-09 06:40:59</name>
  </author>
  <author>
    <name>Gregory Maxwell 2014-10-03 16:17:48</name>
  </author>
  <link href="bitcoin-dev/Oct_2014/006715_-BIP-draft-CHECKLOCKTIMEVERIFY-Prevent-a-txout-from-being-spent-until-an-expiration-time.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2014/006717_-BIP-draft-CHECKLOCKTIMEVERIFY-Prevent-a-txout-from-being-spent-until-an-expiration-time.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2014/006683_-BIP-draft-CHECKLOCKTIMEVERIFY-Prevent-a-txout-from-being-spent-until-an-expiration-time.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [BIP draft] CHECKLOCKTIMEVERIFY - Prevent a txout from being spent until an expiration time</title>
    <updated>2023-05-19T19:20:21.660749+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-October/006715.html" rel="alternate"/>
    <summary>In an email conversation on October 9, 2014, Adam Back mentioned that the existing script level nlocktime could do everything in some sense with a complexity cost, which often requires extra dependent transactions and work-around malleability until it is fixed. Peter Todd asked if anyone could think of an example of a complex transaction use-case that is affected by malleability which cannot be fixed by CHECKLOCKTIMEVERIFY. Matt Whitlock suggested that a new opcode replace the top stack item with the block height of the txout being redeemed, but this would not be soft-forking compatible and would be unsafe as it risks creating weird pressures around immediate block admission since a one additional block delay could forever censor such a transaction. Avoiding these issues is a conscious design in OP_CHECKLOCKTIMEVERIFY.</summary>
    <published>2014-10-09T06:28:19+00:00</published>
  </entry>
</feed>
