<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP-0322 (generic signmessage) improvements</title>
  <updated>2023-05-21T00:30:18.870985+00:00</updated>
  <author>
    <name>Pieter Wuille 2020-12-22 00:22:37</name>
  </author>
  <author>
    <name>Pieter Wuille 2020-12-21 22:57:15</name>
  </author>
  <author>
    <name>Andrew Poelstra 2020-12-18 15:27:20</name>
  </author>
  <link href="bitcoin-dev/Dec_2020/018316_BIP-0322-generic-signmessage-improvements.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2020/018315_BIP-0322-generic-signmessage-improvements.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2020/018313_BIP-0322-generic-signmessage-improvements.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP-0322 (generic signmessage) improvements</title>
    <updated>2023-05-21T00:30:18.870985+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-December/018316.html" rel="alternate"/>
    <summary>Pieter Wuille, a member of the bitcoin-dev community, has proposed changes to the Bitcoin Improvement Proposal (BIP) 322. The proposal aims to create a standard for interoperable signed messages based on the Bitcoin Script format. The current message signing standard only works for P2PKH (1...) invoice addresses. So, the new standard aims to extend and generalize the standard by using a Bitcoin Script-based approach, allowing any coins to be signed for.The proposed changes would permit incomplete validators to return "inconclusive" as a result. Whenever validation fails due to any standardness features listed in the BIP, the report should be "inconclusive" instead of "invalid." In addition to this, he merged the "consensus" and "upgradeable" rules and added an "Extensions" section.The protocol outlines several restrictions that must be met for validation, including the use of SIGHASH_ALL flag, forbidding the use of CODESEPARATOR or FindAndDelete, segwit versions greater than 1 are forbidden, valid ECDSA signatures must be strictly DER-encoded and have a low-S value, all pushes must be minimally encoded, only a single stack element remains after evaluation, and the argument of IF/NOTIF must be exactly 0x01 or empty push.There has been opposition to supporting BIP-322 because of the requirement that you either have a full script interpreter or nothing. However, the vast majority of outputs are single-key p2pkh, p2pkwh or p2sh-wpkh. The document also outlines the steps for verification and signing, as well as extensions to allow for additional states such as timelocks, incomplete validation, and consensus-only validation. This BIP specifies three formats for signing messages: legacy, simple, and full. Additionally, the current message signature format uses ECDSA signatures which do not commit to the public key, meaning that they do not actually prove knowledge of any secret keys. The specification is backwards compatible with the legacy signmessage/verifymessage specification through a special case.The new text can be found on Github, and comments are welcome. This document is licensed under the Creative Commons CC0 1.0 Universal license.</summary>
    <published>2020-12-22T00:22:37+00:00</published>
  </entry>
</feed>
