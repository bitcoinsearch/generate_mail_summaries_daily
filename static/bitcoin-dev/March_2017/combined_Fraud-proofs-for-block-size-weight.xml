<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Fraud proofs for block size/weight</title>
  <updated>2023-05-20T01:05:53.186320+00:00</updated>
  <author>
    <name>Matt Corallo 2017-03-28 22:35:05</name>
  </author>
  <author>
    <name>Matt Corallo 2017-03-22 21:51:08</name>
  </author>
  <link href="bitcoin-dev/March_2017/013839_Fraud-proofs-for-block-size-weight.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2017/013763_Fraud-proofs-for-block-size-weight.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Fraud proofs for block size/weight</title>
    <updated>2023-05-20T01:05:53.187323+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-March/013839.html" rel="alternate"/>
    <summary>There has been a proposal for fraud proofs in Bitcoin and how light clients can detect blockchains that are invalid due to excess size and/or weight. The proposal aims to protect Bitcoin holders from attacks, particularly oversized blocks that aim to force a hardfork. The draft BIP uses the observation that all you need to show the length and hash of a transaction is the final SHA256 midstate and chunk (max 64 bytes). The only issue is that since parts of the merkle tree are repeated, you need to ensure that the counting for the minimum number of transactions is accurate. This draft is probably ready for implementation but any improvement suggestions are welcome.</summary>
    <published>2017-03-28T22:35:05+00:00</published>
  </entry>
</feed>
