<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Security problems with relying on transaction fees for security</title>
  <updated>2023-05-22T20:45:13.044840+00:00</updated>
  <author>
    <name>Anthony Towns 2022-07-14 00:54:48</name>
  </author>
  <author>
    <name>Anthony Towns 2022-07-11 23:29:47</name>
  </author>
  <author>
    <name>Bram Cohen 2022-07-11 18:12:52</name>
  </author>
  <link href="bitcoin-dev/July_2022/020735_Security-problems-with-relying-on-transaction-fees-for-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2022/020716_Security-problems-with-relying-on-transaction-fees-for-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2022/020702_Security-problems-with-relying-on-transaction-fees-for-security.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Security problems with relying on transaction fees for security</title>
    <updated>2023-05-22T20:45:13.045842+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-July/020735.html" rel="alternate"/>
    <summary>The discussion on bitcoin-dev mailing list revolves around the issue of relying completely on transaction fees for security. The existing practice shows that having transaction fees be about 10% of rewards on average works well. It is enough to incentivize collecting fees but not so much that it makes incentives get all weird. However, if Bitcoin is entirely dependent on fees for security and the day/night cycle with fees going to zero overnight and even longer gaps on weekends and holidays persists, this will become a serious problem. The miners may start turning off their mining rigs completely overnight and adopt the more sophisticated strategy of waiting until there are enough fees in the mempool to warrant attempting to make a block and only then do it. One possible approach to fix this issue is to have wallets opportunistically collect their dust during times of low transaction fees which would save users on fees. Another possible solution is to have UX which clarifies when things are likely to take a day or week but that it's reliable. However, users are very averse to transactions taking a while. If nothing is done, relying completely on transaction fees for security is likely to be a disaster. The beginnings of a slippery slope to a mining cabal which reorgs everyone else out of existence and eventually 51% attacks the whole thing have begun. Once there's a cabal aggressively reorging anyone else out when they make a block, other miners will shut down and rapidly lose the ability to quickly spin up again, so the threshold needed for that 51% attack will keep going down.In terms of bribes, sufficiently advanced tx introspection could be used to bypass the maturity rule by spending the fees in the coinbase to address A, but also creating a 0sat output via a regular tx to the scriptPubKey "1 CSV". The next miner claims the bribe by spending the 0sat output to itself with a 1-in, 1-out tx, with scriptPubKey C. However, such txs (and anything that descends from them) would become invalid with as little as a 1-block reorg, which would pretty much defeat the entire purpose of the maturity delay.</summary>
    <published>2022-07-14T00:54:48+00:00</published>
  </entry>
</feed>
