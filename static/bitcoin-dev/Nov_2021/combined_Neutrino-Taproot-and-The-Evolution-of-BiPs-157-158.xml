<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Neutrino, Taproot, and The Evolution of BiPs 157/158</title>
  <updated>2023-05-22T16:15:59.713276+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2021-11-04 22:01:13</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2021-11-04 22:07:52</name>
  </author>
  <link href="bitcoin-dev/Nov_2021/019589_Neutrino-Taproot-and-The-Evolution-of-BiPs-157-158.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2021/019590_Neutrino-Taproot-and-The-Evolution-of-BiPs-157-158.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Neutrino, Taproot, and The Evolution of BiPs 157/158</title>
    <updated>2023-05-22T16:15:59.713276+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019589.html" rel="alternate"/>
    <summary>On the Neutrino testnet, a faulty heuristic in the client code caused nodes to reject a filter as invalid due to a taproot input transaction. Although clients can ensure that all the pkScripts of outputs have been inserted, they cannot do the same for inputs, which is why the heuristic was added in the client code. This issue was mitigated by a patch that has been put in place. The problematic heuristic has also been removed in a pull request that will be included in lnd 0.14 and has been tagged with neutrino 0.13. To ensure smooth handling of the Taproot upgrade on mainnet, users can upgrade to 0.14 (when released) or apply a small patch. It is recommended to extend the filter header guides alongside these upgrades.BIP 158/157 may evolve post-taproot by creating new segwit-only filters with re-parameterized fp rates, creating filters that include witness data to allow matching on internal/external keys, adding a new protocol extension to btcd to allow nodes to fetch block undo data, and making further progress towards a proposal that allows filters to be committed either as a soft-fork or a "velvet fork."</summary>
    <published>2021-11-04T22:01:13+00:00</published>
  </entry>
</feed>
