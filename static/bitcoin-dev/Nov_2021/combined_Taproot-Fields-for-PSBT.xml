<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Taproot Fields for PSBT</title>
  <updated>2023-05-21T02:47:18.260054+00:00</updated>
  <author>
    <name>Pieter Wuille 2021-11-24 16:08:18</name>
  </author>
  <author>
    <name>Andrew Chow 2021-06-22 21:22:28</name>
  </author>
  <author>
    <name>Andrew Chow 2021-06-28 16:04:19</name>
  </author>
  <link href="bitcoin-dev/Nov_2021/019607_Taproot-Fields-for-PSBT.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2021/019095_Taproot-Fields-for-PSBT.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2021/019136_Taproot-Fields-for-PSBT.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Taproot Fields for PSBT</title>
    <updated>2023-05-21T02:47:18.261049+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019607.html" rel="alternate"/>
    <summary>On November 24th, 2021, Sjors Provoost questioned why PSBT_IN_TAP_BIP32_DERIVATION and PSBT_OUT_TAP_BIP32_DERIVATION contain the tapleaf merkle path along with the derivation path for the xonlypubkey. Pieter clarified that the tapleaf merkle path is necessary for signers to know which script leaves they can sign with their own keys without fully understanding the script.The proposed BIP called "Taproot Fields for PSBT" by Andrew Chow aims to define new fields for Taproot support in PSBT. These fields will allow PSBTs to carry the necessary information for signing Taproot inputs including signatures and scripts relevant to the creation of Taproot inputs. The new per-input types include Taproot Key Spend Signature, Taproot Script Spend Signature, Taproot Leaf Script, Taproot Key BIP 32 Derivation Path, and Taproot Internal Key. Each type has an associated code and a description of its contents, versions requiring inclusion/exclusion, and versions allowing inclusion/exclusion.The proposed changes to the Partially Signed Bitcoin Transaction (PSBT) format for Taproot include new per-output types, such as PSBT_OUT_TAP_INTERNAL_KEY, which contains the X-only pubkey used as the internal key in the output, and PSBT_OUT_TAP_BIP32_DERIVATION, which includes a compact size unsigned integer representing the number of leaf hashes, followed by a list of leaf hashes, followed by the master key fingerprint concatenated with the derivation path of the public key.Additionally, BIP 174 recommends using PSBT_IN_NON_WITNESS_UTXO for all inputs due to potential attacks involving an updater lying about the amounts in an output, but because a Taproot signature will commit to all of the amounts and output scripts spent by the inputs of the transaction, such attacks are prevented.The PSBT format is designed to be extensible, so old software will ignore the new fields. The reference implementation of the PSBT format is available at TBD.</summary>
    <published>2021-11-24T16:08:18+00:00</published>
  </entry>
</feed>
