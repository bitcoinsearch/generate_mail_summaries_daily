<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [BIP] Normalized transaction IDs</title>
  <updated>2023-05-19T22:18:26.065999+00:00</updated>
  <author>
    <name>Gregory Maxwell 2015-10-21 19:27:54</name>
  </author>
  <author>
    <name>Gregory Maxwell 2015-10-21 08:26:47</name>
  </author>
  <author>
    <name>Gregory Maxwell 2015-10-21 07:48:39</name>
  </author>
  <author>
    <name>Gregory Maxwell 2015-10-22 08:57:29</name>
  </author>
  <author>
    <name>Gregory Maxwell 2015-10-21 10:14:01</name>
  </author>
  <link href="bitcoin-dev/Oct_2015/011589_-BIP-Normalized-transaction-IDs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2015/011579_-BIP-Normalized-transaction-IDs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2015/011576_-BIP-Normalized-transaction-IDs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2015/011595_-BIP-Normalized-transaction-IDs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2015/011586_-BIP-Normalized-transaction-IDs.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [BIP] Normalized transaction IDs</title>
    <updated>2023-05-19T22:18:26.065999+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-October/011589.html" rel="alternate"/>
    <summary>The discussion among developers on Bitcoin-dev mailing list was regarding the prevention of third-party transaction malleability. Canonical encoding enforcement was suggested as an immediate solution to prevent third party malleability on ordinary transactions. This solution is already deployed as a standardness rule, and once miners update to 0.11.1 or 0.10.3 (or equivalent), only miners will be able to have malleable ordinary payments, to the best of their current understanding. However, it does not prevent third party mutation until people change their public keys to new schemes. Gregory Maxwell expressed his concern about the difficulty of deploying uniform segregated witness. Luke Dashjr suggested an alternative solution where a scriptPubkey type is defined, and in the soft-fork, the scriptsig for this scriptPubkey is required to be empty. Signatures are carried along side and then committed to in blocks in a separate hashtree.Christian Decker proposed the implementation of normalized transaction ID when adding them to the UTXO to prevent modification in multistep contracts and other cases. Normalized transaction IDs help to prevent any modification in multi-signer scenarios and when the single signer wants to immediately follow up its transaction with another transaction spending the first one's change output. For ordinary transactions, canonical encoding is a better solution that doesn't have associated costs such as new pubkey type adoption, UTXO size increase, need for nodes to fixup txid references, etc.</summary>
    <published>2015-10-21T19:27:54+00:00</published>
  </entry>
</feed>
