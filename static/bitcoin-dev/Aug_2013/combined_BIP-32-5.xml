<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP 32.5</title>
  <updated>2023-05-19T17:26:39.076230+00:00</updated>
  <author>
    <name>Gregory Maxwell 2013-08-16 02:26:29</name>
  </author>
  <author>
    <name>Gregory Maxwell 2013-08-20 08:35:29</name>
  </author>
  <link href="bitcoin-dev/Aug_2013/003128_BIP-32-5.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2013/003194_BIP-32-5.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP 32.5</title>
    <updated>2023-05-19T17:26:39.076230+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-August/003128.html" rel="alternate"/>
    <summary>The proposal suggests having a BIP32 addendum that recommends a specific deterministic DSA derandomization procedure to generate the DSA nonce. This is due to the risk of compromising DSA systems caused by poor randomness at runtime, which can allow for maliciously modified hardware wallets to leak keys material via signatures. The proposal argues that a fully deterministic signature would allow for complete test vectors in signing and complete confidence that there is no random number related weakness in a signing implementation. The use of even S values in signatures is also recommended to eliminate this source of mutability in transactions. The proposal acknowledges that industry is moving in the direction of derandomized DSA as it has become clear that DSA is hazardous otherwise. An alternative is implementing a still random construct where K is some H(message||key||random), but this loses the advantage of being able to externally verify that an implementation is not leaking information. Libcrypt has implemented derandomized DSA in git and the ed25519 signature system of DJB, et. al. also uses a similar derandomization. OpenSSL development has also implemented a form of this recently. The proposal concludes by suggesting that implementing even S values in signatures will become a network requirement for Bitcoin someday, but regardless, it makes sense to implement it as a best practice sooner rather than later. Gregory Maxwell is positive about the proposal and plans to start on an actual BIP document for it.</summary>
    <published>2013-08-16T02:26:29+00:00</published>
  </entry>
</feed>
