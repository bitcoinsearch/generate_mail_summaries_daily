<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Signature bundles</title>
  <updated>2023-05-20T05:25:19.256085+00:00</updated>
  <author>
    <name>Anthony Towns 2018-04-03 03:57:23</name>
  </author>
  <author>
    <name>Rusty Russell 2018-04-02 23:46:45</name>
  </author>
  <link href="bitcoin-dev/April_2018/015864_Signature-bundles.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2018/015862_Signature-bundles.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Signature bundles</title>
    <updated>2023-05-20T05:25:19.256085+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-April/015864.html" rel="alternate"/>
    <summary>Bitcoin developer Rusty Russell has proposed a more flexible alternative to SIGHASH_SINGLE|SIGHASH_ANYONECANPAY with the introduction of two new signature types: SIGHASH_BUNDLESTART and SIGHASH_INBUNDLE. The proposal aims to enable a signature that signs only part of a transaction's inputs and outputs, allowing bundles to be combined into larger transactions, with non-bundled signature inputs/outputs appended. The two per-tx counters for bundle_inputs_used and bundle_outputs_used both start at 0. SIGHASH_BUNDLESTART indicates two var_int sit between the sighash flags and the signature itself, while SIGHASH_INBUNDLEÂ indicates that this signature applies to the current bundle. The proposal comes as Bitcoin is facing issues trying to guess future fees for commitment transactions and finding an alternative to using parent-pays-for-child since the outputs that can be spent are timelocked. This makes "holding a valid tx but wanting to add fees later without re-signing" a general problem. A potential application of the proposed method would be to run public aggregators that provide throughput promises and allow users and services to offer 'slow mode' payment options without requiring interaction.</summary>
    <published>2018-04-03T03:57:23+00:00</published>
  </entry>
</feed>
