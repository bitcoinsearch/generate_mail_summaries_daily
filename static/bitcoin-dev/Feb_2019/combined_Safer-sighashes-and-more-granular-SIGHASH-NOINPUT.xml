<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Safer sighashes and more granular SIGHASH_NOINPUT</title>
  <updated>2023-05-20T18:17:05.789409+00:00</updated>
  <author>
    <name>Johnson Lau 2018-11-28 08:40:34</name>
  </author>
  <author>
    <name>Anthony Towns 2018-11-23 05:03:30</name>
  </author>
  <author>
    <name>Johnson Lau 2018-11-22 14:28:35</name>
  </author>
  <author>
    <name>Johnson Lau 2018-11-21 17:55:22</name>
  </author>
  <author>
    <name>Anthony Towns 2018-11-20 20:29:04</name>
  </author>
  <author>
    <name>Johnson Lau 2018-12-24 21:23:44</name>
  </author>
  <author>
    <name>Johnson Lau 2018-12-23 16:33:48</name>
  </author>
  <author>
    <name>Johnson Lau 2018-12-20 19:34:38</name>
  </author>
  <author>
    <name>Johnson Lau 2018-12-17 19:08:26</name>
  </author>
  <author>
    <name>Anthony Towns 2018-12-14 00:47:29</name>
  </author>
  <author>
    <name>Anthony Towns 2018-12-13 00:24:38</name>
  </author>
  <author>
    <name>Johnson Lau 2018-12-12 19:53:38</name>
  </author>
  <author>
    <name>Pieter Wuille 2019-02-09 00:39:54</name>
  </author>
  <author>
    <name>Johnson Lau 2018-11-28 08:31:48</name>
  </author>
  <author>
    <name>Pieter Wuille 2018-11-28 03:41:02</name>
  </author>
  <author>
    <name>Johnson Lau 2018-11-24 08:13:46</name>
  </author>
  <author>
    <name>Johnson Lau 2018-11-23 10:47:10</name>
  </author>
  <author>
    <name>Anthony Towns 2018-11-23 06:04:04</name>
  </author>
  <author>
    <name>Johnson Lau 2018-11-22 20:52:54</name>
  </author>
  <author>
    <name>Pieter Wuille 2018-11-19 22:37:57</name>
  </author>
  <author>
    <name>Anthony Towns 2018-12-23 04:26:59</name>
  </author>
  <author>
    <name>Johnson Lau 2018-12-21 18:54:42</name>
  </author>
  <author>
    <name>Johnson Lau 2018-12-14 13:55:43</name>
  </author>
  <author>
    <name>Anthony Towns 2018-12-14 09:30:02</name>
  </author>
  <author>
    <name>Anthony Towns 2018-12-13 00:05:53</name>
  </author>
  <author>
    <name>Johnson Lau 2018-12-12 20:00:50</name>
  </author>
  <author>
    <name>Johnson Lau 2018-12-09 19:13:34</name>
  </author>
  <link href="bitcoin-dev/Nov_2018/016512_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2018/016500_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2018/016495_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2018/016494_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2018/016490_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016594_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016586_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016575_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016561_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016554_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016547_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016543_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2019/016668_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2018/016511_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2018/016508_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2018/016505_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2018/016503_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2018/016501_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2018/016498_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2018/016488_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016585_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016581_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016557_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016555_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016546_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016544_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2018/016535_Safer-sighashes-and-more-granular-SIGHASH-NOINPUT.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Safer sighashes and more granular SIGHASH_NOINPUT</title>
    <updated>2023-05-20T18:17:05.790363+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-November/016512.html" rel="alternate"/>
    <summary>The Bitcoin development community has been discussing several proposals related to the next-generation SIGHASH and the use of OP_CODESEPARATOR. One proposal suggests adding three new sighash flags (SIGHASH_NOINPUT, SIGHASH_NOFEE, and SIGHASH_SCRIPTMASK) and a new opcode called OP_MASK, which acts as an NOP during execution. The proposed change will improve the efficiency of hashing large scripts with multiple CODESEPARATORs and CHECKSIGs. However, there are concerns that the complexity of the proposal could cause issues and may not be necessary for functionality purposes.There has also been a discussion about the usefulness of OP_CODESEPARATOR under taproot. While committing to the (masked) script is sufficient in cases without conditionals, codeseparator can be used to make a script more compact. However, some argue that OP_CODESEPARATOR should be disabled due to its complexity. Additionally, there have been concerns about the security of OP_CODESEPARATOR with NOINPUT, as committing blindly to a random OP_CODESEPARATOR position could occur if it doesn't commit to the masked script.Another proposal suggests committing to the absolute transaction fee and scriptPubKey, which could prevent lying to devices about the type of output being spent. However, these features would imply additional information that may not be desirable to commit to in all circumstances, so they should be optional. The proposal also adds three new sighash flags, including SIGHASH_SCRIPTMASK, which would allow indicating which parts of a script are subject to change.There is also a debate over how to commit to the weight and fees of transactions. Some suggest signing an upper bound on weight, while others argue that signing the actual weight commits to the fee rate and overall priority. There is also a suggestion to adopt the option of signatures covering weight, which could lead to a net weight savings by avoiding the need for anti-malleability Script code.In addition, the discussion revolves around the feasibility and effectiveness of script masking as a security measure for NOINPUT. While some argue that it is non-trivially more complicated for wallets and a potential tradeoff between complexity and safety, others believe that minimal complexity for future wallets is an underappreciated feature.Overall, the debate highlights the importance of security being the dominant factor in Bitcoin protocol development, with the inevitability of supporting NOINPUT once deployed, and the need to implement only what is necessary for functionality purposes.</summary>
    <published>2018-11-28T08:40:34+00:00</published>
  </entry>
</feed>
