<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Base64-encoded descriptors</title>
  <updated>2023-05-20T21:26:31.534250+00:00</updated>
  <author>
    <name>Andrew Chow 2019-12-26 05:18:00</name>
  </author>
  <author>
    <name>Chris Belcher 2019-12-24 17:06:01</name>
  </author>
  <link href="bitcoin-dev/Dec_2019/017535_Base64-encoded-descriptors.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2019/017529_Base64-encoded-descriptors.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Base64-encoded descriptors</title>
    <updated>2023-05-20T21:26:31.534250+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-December/017535.html" rel="alternate"/>
    <summary>The proposal of encoding Bitcoin descriptors has been made due to concerns that users may be unwilling to use or be confused by the syntax of descriptors. The idea is to encode it in some way to make it look like a magic string that they need to handle as one unit and not be intimidated by. Base64 was suggested, but there are concerns with it because it is not good for double-click copy-pasting. Alternative encoding methods like Bech32 or Base58 could be used instead. The checksum scheme of Base64 is not defined, while Bech32 and Base58 already have their own checksum schemes. Descriptors have their own BCH code for descriptor checksums optimized for their length and character set, so it can be repurposed to be used with whatever encoding scheme is chosen provided that the encoding's character set is covered by the descriptor checksum character set. The descriptors contain parenthesis and commas which stop highlighting by double-clicking, making it hard to copy-paste them. Base64 encoding will solve this problem, but there is a concern about the descriptor checksum. If there's a typo in the base64 text, then that could decode into multiple character errors in the descriptor, which might be problematic for the checksum. A solution could be to base64 encode the descriptors without the checksum, then attach the checksum to the end of the base64 text.</summary>
    <published>2019-12-26T05:18:00+00:00</published>
  </entry>
</feed>
