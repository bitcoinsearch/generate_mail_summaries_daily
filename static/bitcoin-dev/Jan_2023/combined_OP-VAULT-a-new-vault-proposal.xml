<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - OP_VAULT: a new vault proposal</title>
  <updated>2023-05-22T23:21:55.674829+00:00</updated>
  <author>
    <name>Anthony Towns 2023-01-17 07:46:38</name>
  </author>
  <author>
    <name>Anthony Towns 2023-01-10 12:29:52</name>
  </author>
  <author>
    <name>Andrew Chow 2023-01-16 23:47:09</name>
  </author>
  <author>
    <name>Anthony Towns 2023-01-11 06:52:28</name>
  </author>
  <author>
    <name>James O'Beirne 2023-01-09 16:07:54</name>
  </author>
  <link href="bitcoin-dev/Jan_2023/021352_OP-VAULT-a-new-vault-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021328_OP-VAULT-a-new-vault-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021350_OP-VAULT-a-new-vault-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021333_OP-VAULT-a-new-vault-proposal.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021318_OP-VAULT-a-new-vault-proposal.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - OP_VAULT: a new vault proposal</title>
    <updated>2023-05-22T23:21:55.675780+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021352.html" rel="alternate"/>
    <summary>James O'Beirne proposed a new design, OP_VAULT, to make the best use of vaults with covenant functionality as a secondary consideration. The proposal aims to deliver the safety benefits of vaults to users without getting hung up on trying to solve the general problem of covenants. The proposal allows multiple deposits in a single vault scriptPubKey but makes it impossible to spend these vaults together due to the recovery script matching issue. The current construction of OP_VAULT makes it impossible to spend these vaults together when there are multiple inputs with different recovery scripts. To address this issue, the proposal suggests having the unvault path for OP_VAULT require the vout number for its corresponding OP_UNVAULT output on the stack. It also features a scriptPubKey allowing two spend paths: recovery and unvaulting, both requiring specific verifications, and delayed withdrawals without a cap. The article's author experimented with using OP_CTV to implement a minimum-viable vault design but found it wanting. Instead, the author proposed a design solely concerned with making the best vault use possible, named OP_VAULT. James believes that even if the proposal isn't considered for soft-fork, it is worthwhile to serve as a standard benchmark against which other proposals might be judged. Using OP_VAULT and OP_UNVAULT for bare and P2WSH outputs may not be appropriate, raising issues regarding batching and privacy. The proposal includes a paper summarizing the findings and a draft implementation.</summary>
    <published>2023-01-17T07:46:38+00:00</published>
  </entry>
</feed>
