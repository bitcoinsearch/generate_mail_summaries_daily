<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Payment protocol for onion URLs.</title>
  <updated>2023-05-19T17:38:09.229002+00:00</updated>
  <author>
    <name>Gregory Maxwell 2013-10-26 03:31:05</name>
  </author>
  <author>
    <name>Gregory Maxwell 2013-10-26 04:06:48</name>
  </author>
  <link href="bitcoin-dev/Oct_2013/003456_Payment-protocol-for-onion-URLs-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2013/003459_Payment-protocol-for-onion-URLs-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Payment protocol for onion URLs.</title>
    <updated>2023-05-19T17:38:09.229002+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-October/003456.html" rel="alternate"/>
    <summary>The payment protocol lacks the ability for a tor hidden service site to fully use its authentication capabilities as they are unable to obtain SSL certificates. A solution proposed is to pack a tor HS pubkey into a self-signed x509 certificate with the cn set to foooo.onion and specify in the payment protocol an additional validation procedure for base32.onion hosts that just has it hash and base32 encode the pubkey (as tor does). This would give us a fully supported option which is completely CA free and would work only for tor sites. It would be trivial to add this code, and if there is support, it can be made into a standard feature.The x.509 in the payment protocol itself is for authentication and non-repudiation, not confidentiality. It is used to sign the payment request so that later there is cryptographic evidence in case of a dispute. The payment protocol is extensible, and it would be nice to have a way to support namecoin-provided keys too. However, this will require a fair amount of code and will not be widely used. Tor onion support, on the other hand, would require only a relatively few lines of code since it could just be the existing x.509 mechanism with just a simple special validation rule for .onion, plus a little tool to repack the keys. The tor onion support could work seamlessly with tor hosts and would only work for tor sites.</summary>
    <published>2013-10-26T03:31:05+00:00</published>
  </entry>
</feed>
