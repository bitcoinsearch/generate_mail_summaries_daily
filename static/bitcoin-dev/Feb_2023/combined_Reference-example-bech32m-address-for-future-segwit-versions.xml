<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Reference example bech32m address for future segwit versions</title>
  <updated>2023-05-22T23:25:51.032611+00:00</updated>
  <author>
    <name>Anthony Towns 2023-02-01 01:13:49</name>
  </author>
  <author>
    <name>Greg Sanders 2023-02-01 00:37:06</name>
  </author>
  <link href="bitcoin-dev/Feb_2023/021386_Reference-example-bech32m-address-for-future-segwit-versions.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021385_Reference-example-bech32m-address-for-future-segwit-versions.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Reference example bech32m address for future segwit versions</title>
    <updated>2023-05-22T23:25:51.032611+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021386.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list, participants debated whether wallets should spend to the output indicated by any valid bech32m address. The argument was made that if the wallet is non-custodial and may not be upgraded by the time witness v2 addresses are in use, then being able to send to such addresses now makes sense. However, for custodial wallets, it was argued that sending to such addresses before they are in use could be considered negligent, as it could result in coins being stolen, and the custodian may be forced to make the user whole again. It was suggested that testing the best practice of spending to the output indicated by any valid bech32m address would be beneficial for non-custodial wallets, but not necessary for custodial wallets. Greg Sanders stated that from a risk perspective, most exchanges would not enable sends to future segwit versions. Meanwhile, David A. Harding referred to BIP350, which recommends supporting sending to v1 and higher versions, and asked if anyone knew of a better script than OP_16 OP_PUSH2 0000.</summary>
    <published>2023-02-01T01:13:49+00:00</published>
  </entry>
</feed>
