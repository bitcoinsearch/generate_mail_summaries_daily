<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Recent EvalScript() changes mean CHECKLOCKTIMEVERIFY can't be merged</title>
  <updated>2023-05-19T19:35:34.428364+00:00</updated>
  <author>
    <name>Pieter Wuille 2014-12-15 18:10:08</name>
  </author>
  <author>
    <name>Gregory Maxwell 2014-12-15 17:38:57</name>
  </author>
  <link href="bitcoin-dev/Dec_2014/007006_Recent-EvalScript-changes-mean-CHECKLOCKTIMEVERIFY-can-t-be-merged.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2014/007002_Recent-EvalScript-changes-mean-CHECKLOCKTIMEVERIFY-can-t-be-merged.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Recent EvalScript() changes mean CHECKLOCKTIMEVERIFY can't be merged</title>
    <updated>2023-05-19T19:35:34.428364+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-December/007006.html" rel="alternate"/>
    <summary>Bitcoin developer Peter Todd has voiced his concerns over the development process of the consensus critical codebase in an email to the Bitcoin development mailing list. He expressed worries about the risks that are being taken with respect to refactoring the codebase, which could potentially lead to safety and trust issues. Todd's concerns were raised after BtcDrak discovered a significant design change that made merging certain patches impossible. Todd believes that this is indicative of a development process that is taking significant risks.Todd also mentioned that he found it difficult to keep up with the large volume of code being moved and changed for the v0.10 release. Additionally, the #4890 pull-req had no ACKs and only two untested utACKS, which Todd found concerning given the significant consensus critical code changes it made. In response to Todd's concerns, Bitcoin Core developer Pieter Wuille stated that while he agreed with Todd's points, they were not at a point where they could freeze anything that touched consensus-related code. Wuille acknowledged that refactorings are sometimes necessary, and if they ever want to get to a separate consensus code tree or repository, possibly with more strict reviews, changes like this are inevitable. Lastly, Todd recommended not upgrading to v0.10 due to the issues he raised. Meanwhile, Wuille mentioned that he had been in favor of a libconsensus library for separating out the consensus-critical parts from optional pieces of the codebase, but acknowledged that it did not fully accomplish all its goals yet.Todd suggests that the current approach to creating a library for the code may compromise safety and proposes a safer approach that involves only minor code movements for this release. Todd also argues that the consensus code is mixed throughout the codebase and should be separated to avoid unnecessary strain on development. Todd's comments were made in response to Pull-req #4890 which disentangled the script validation from the node state and allowed for plain script evaluator calls without replicating all of bitcoind's logic. Todd questions why the change was not raised earlier if there were concerns about it and suggests that additional tests could increase confidence in specific safety concerns. He concludes that while it would be nice to have a library encapsulating the consensus code, it should not come at the cost of safety.</summary>
    <published>2014-12-15T18:10:08+00:00</published>
  </entry>
</feed>
