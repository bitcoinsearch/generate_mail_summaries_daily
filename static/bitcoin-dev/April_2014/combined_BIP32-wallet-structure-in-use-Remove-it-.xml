<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP32 "wallet structure" in use? Remove it?</title>
  <updated>2023-05-19T18:49:42.563956+00:00</updated>
  <author>
    <name>Gregory Maxwell 2014-04-25 15:46:15</name>
  </author>
  <author>
    <name>Pieter Wuille 2014-04-26 13:41:56</name>
  </author>
  <link href="bitcoin-dev/April_2014/005543_BIP32-wallet-structure-in-use-Remove-it-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2014/005582_BIP32-wallet-structure-in-use-Remove-it-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP32 "wallet structure" in use? Remove it?</title>
    <updated>2023-05-19T18:49:42.563956+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005543.html" rel="alternate"/>
    <summary>In this email exchange from 2014, Jim expresses concern about the potential loss of intra-client HD compatibility for BIP32 wallets. He suggests creating a lowest common denominator or "HD Basic" that all wallets can agree to support to prevent vendor lock-in and help entry-level users. However, Pieter disagrees, stating that wallet interoperability at this level is not possible unless it's an explicit compatibility feature. The structure of the derivation defines and constrains functionality, and there are many other things that go into making a wallet portable between systems. Pieter acknowledges that a compatibility mode could be supported, but he doubts it would be widely used since the decision to use that mode comes at the wrong time and heavily constraining functionality in order to get another result is too high. Pavol Rusnak agrees with Pieter and suggests that defining a way to import an unknown wallet is nonsense since it's impossible without knowing its structure, especially when multiple chains are combined for P2SH usage. However, Rusnak proposes defining something like "BIP44 import-compatible" that guarantees not losing any funds when imported even though the application doesn't support all of BIP44 features. Similar things could be done for other purpose types. Overall, the consensus is that wallet interoperability at this level is challenging, and complete wallet metadata must be considered for true portability.</summary>
    <published>2014-04-25T15:46:15+00:00</published>
  </entry>
</feed>
