<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - # error "Bitcoin cannot be compiled without assertions." &lt;&lt;&lt;&lt;NOT</title>
  <updated>2023-05-19T18:58:43.670776+00:00</updated>
  <author>
    <name>Pieter Wuille 2014-06-06 08:40:20</name>
  </author>
  <author>
    <name>Gregory Maxwell 2014-06-04 10:31:24</name>
  </author>
  <author>
    <name>Gregory Maxwell 2014-06-04 10:15:04</name>
  </author>
  <link href="bitcoin-dev/June_2014/005969_-error-Bitcoin-cannot-be-compiled-without-assertions-NOT.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005953_-error-Bitcoin-cannot-be-compiled-without-assertions-NOT.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005951_-error-Bitcoin-cannot-be-compiled-without-assertions-NOT.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - # error "Bitcoin cannot be compiled without assertions." &lt;&lt;&lt;&lt;NOT</title>
    <updated>2023-05-19T18:58:43.670776+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-June/005969.html" rel="alternate"/>
    <summary>The discussion is regarding the use of asserts in Bitcoin Core. Jannis Froese suggested that a nicer definition of asserts which is independent of NDEBUG should be introduced and a second class of debugging asserts should be added for expensive, redundant checks that are disabled by NDEBUG. Pieter agreed with the idea of optional consistency checks to ensure that the software always has a consistent state. Mike Hearn stated that as a matter of procedure, assertions with side effects should not be used. The codebase previously used such assertions but they have been cleaned up. The decision to make it refuse to compile without assertions enabled was wise as some additional side-effect having assert was contributed. He also suggested that using their own assertion macros would be superior as they can give better reporting. However, making larger changes all at once would be unwise, so refusing to compile in that untested, unsupported configuration is prudent for the time being.</summary>
    <published>2014-06-06T08:40:20+00:00</published>
  </entry>
</feed>
