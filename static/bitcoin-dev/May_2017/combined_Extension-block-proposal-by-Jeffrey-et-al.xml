<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Extension block proposal by Jeffrey et al</title>
  <updated>2023-05-20T01:43:54.368875+00:00</updated>
  <author>
    <name>Johnson Lau 2017-04-10 10:14:36</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2017-04-05 14:05:37</name>
  </author>
  <author>
    <name>Johnson Lau 2017-04-04 18:35:01</name>
  </author>
  <author>
    <name>Johnson Lau 2017-05-09 17:56:28</name>
  </author>
  <author>
    <name>Johnson Lau 2017-04-05 17:04:10</name>
  </author>
  <link href="bitcoin-dev/April_2017/014124_Extension-block-proposal-by-Jeffrey-et-al.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/013988_Extension-block-proposal-by-Jeffrey-et-al.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/013982_Extension-block-proposal-by-Jeffrey-et-al.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014294_Extension-block-proposal-by-Jeffrey-et-al.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/013993_Extension-block-proposal-by-Jeffrey-et-al.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Extension block proposal by Jeffrey et al</title>
    <updated>2023-05-20T01:43:54.368875+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/014124.html" rel="alternate"/>
    <summary>The email thread discusses a proposal for improving Bitcoin's transaction model, which centers around the direct exit payment to legacy addresses and the potential for block reorgs to invalidate child transactions. Two possible solutions were suggested: adding a maturity requirement for exiting outputs or moving all exiting outputs to the coinbase. However, both solutions have drawbacks regarding backward compatibility issues and user experience. The discussion also focuses on the implementation, lock-up period, and direct exit to legacy addresses.Additionally, the proposal includes a sub-proposal for Lightning Network (LN) to mitigate a systematic risk related to blockchain availability in the case of a channel dispute. The proposed solution is the Pre-Allocated Smart-contract Dispute Arena (PASDA), which allows contracts to pre-allocate a section of the block for dispute transactions. The proposal should be considered in tandem with the xblock proposal as both have unanswered questions that need to be explored.The Payment Arena Smart-Contract Driven Accumulator (PASDA) aims to pre-allocate a certain amount of bytes in all future blocks to smart contract transactions. This proposal introduces concerns about introducing a new attack vector and decreasing block size permanently. Fungibility enhancing techniques may be a viable path forward to patch the second attack vector.The extension block proposal by Christopher Jeffrey, Joseph Poon, Fedor Indutny, and Steven Pair is another proposal aimed at increasing Bitcoin transaction throughput without altering any existing consensus rules. While technically sound, extension blocks create additional technical debt and complexity without providing any benefits beyond other alternatives. Furthermore, they risk creating two classes of "full nodes" due to consensus-critical extensions. Other issues include the inability to spend unconfirmed funds in the same block, restrictions on output script codes aside from witness programs, p2pkh or p2sh, and concerns over maximum size.Dashjr notes that this BIP, in its current form, is not compatible with BIP141 and should only be activated if BIP141 fails to activate. Dashjr further suggests that if the community endorses the idea of an extension block, then BIP141 could be activated first, then work together to make the extension block possible.Overall, there are several proposals to improve Bitcoin's transaction model, each with its own strengths and weaknesses. These proposals should be carefully considered and discussed in the bitcoin-dev mailing list before being implemented.</summary>
    <published>2017-04-10T10:14:36+00:00</published>
  </entry>
</feed>
