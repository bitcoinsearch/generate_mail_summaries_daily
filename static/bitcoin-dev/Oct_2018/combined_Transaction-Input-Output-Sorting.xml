<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Transaction Input/Output Sorting</title>
  <updated>2023-05-20T17:58:09.391504+00:00</updated>
  <author>
    <name>Gregory Maxwell 2018-10-24 16:12:39</name>
  </author>
  <author>
    <name>rhavar at protonmail.com 2018-10-21 19:00:59</name>
  </author>
  <link href="bitcoin-dev/Oct_2018/016462_Transaction-Input-Output-Sorting.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2018/016457_Transaction-Input-Output-Sorting.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Transaction Input/Output Sorting</title>
    <updated>2023-05-20T17:58:09.391504+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-October/016462.html" rel="alternate"/>
    <summary>In a discussion on bitcoin-dev, Chris Belcher drew attention to the fact that around 60% of transactions follow bip69 sorting protocol. However, some wallets and protocols have strong objections to this deterministic sorting, which makes it easy to spot the boundaries between different wallets. The main concerns are the potential privacy loss during the transition period and the possibility that in the future, certain bitcoin usage may not be compatible with bip69, leading to heavily noticeable transactions. To solve this impasse, Ryan suggested using a semi-secret for deterministic sorting, such as `sortingSecret = hmac(walletSeed, "sortingSecret")`, with a standardized sort order based on the hashing of data and sortingSecret. This approach provides the advantages of deterministic sorting while externally appearing randomized.</summary>
    <published>2018-10-24T16:12:39+00:00</published>
  </entry>
</feed>
