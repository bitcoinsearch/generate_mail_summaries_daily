<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Segwit Upgrade Procedures &amp; Block Extension Data</title>
  <updated>2023-05-19T23:05:14.039234+00:00</updated>
  <author>
    <name>Pieter Wuille 2016-02-01 16:55:03</name>
  </author>
  <author>
    <name>Anthony Towns 2016-01-30 15:48:57</name>
  </author>
  <author>
    <name>Anthony Towns 2016-01-30 15:32:26</name>
  </author>
  <link href="bitcoin-dev/Feb_2016/012313_Segwit-Upgrade-Procedures-Block-Extension-Data.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012311_Segwit-Upgrade-Procedures-Block-Extension-Data.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012310_Segwit-Upgrade-Procedures-Block-Extension-Data.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Segwit Upgrade Procedures &amp; Block Extension Data</title>
    <updated>2023-05-19T23:05:14.039234+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-February/012313.html" rel="alternate"/>
    <summary>Peter Todd, a Bitcoin developer, has proposed changes to the upgrade procedures associated with segregated witnesses. He suggested adding a new service bit NODE_SEGWIT or bumping the protocol version to connect only to peers with segwit support. However, he noted that this issue will arise again in future soft-forks which add additional data. To counter this problem, he proposed making witness data more extensible and flexible using Unvalidated Block Extension Data. To further address the issue of relaying additional data in future upgrades to Bitcoin following SegWit, the author suggests using a modified coinbase witness to include this extra data, with three possible commitments: segwit, prevblockproof, and fraudproofs. This would involve removing the current restriction that the coinbase witness contain exactly one 32 byte value. The contents of the coinbase witness would be hashed (e.g., as a merkle tree) and committed in place of the current nonce commitment.The author questions whether this approach makes sense but sees it as logical to include proof information in the coinbase witness. Pieter Wuille, another Bitcoin developer, also suggested changing fHaveWitness flag for each connection to a NODE_WITNESS service bit.</summary>
    <published>2016-02-01T16:55:03+00:00</published>
  </entry>
</feed>
