<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - The difficulty of writing consensus critical code: the SIGHASH_SINGLE bug</title>
  <updated>2023-05-19T19:29:56.787326+00:00</updated>
  <author>
    <name>Matt Corallo 2014-11-06 22:05:54</name>
  </author>
  <author>
    <name>Gregory Maxwell 2014-11-07 02:04:57</name>
  </author>
  <link href="bitcoin-dev/Nov_2014/006881_The-difficulty-of-writing-consensus-critical-code-the-SIGHASH-SINGLE-bug.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2014/006890_The-difficulty-of-writing-consensus-critical-code-the-SIGHASH-SINGLE-bug.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - The difficulty of writing consensus critical code: the SIGHASH_SINGLE bug</title>
    <updated>2023-05-19T19:29:56.787326+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-November/006881.html" rel="alternate"/>
    <summary>The use of BIP62 is seen as crucial for the functionality of many basic contracts, including atomic swaps suggested for sidechains. The lack of BIP62 also means that these contracts are not secure. While redoing Bitcoin in a hardfork may be beneficial in the long term, it is not practical to make people wait for a large hardfork just to use payment channels. Writing consensus-compatible code can be difficult, and there is a suggestion that anyone with money behind an implementation should reconsider their decision if they are doing script verification in code that isn't Bitcoin Core. Tamas Blummer suggests that freezing the consensus code and studying its bugs could define a hard fork or a better chain. Peter Todd acknowledges that BIP62 makes life easier for wallet authors, but notes that CTLV is what should be used for most contract purposes. He adds that BIP62 also achieves the secondary goal of making required implementation behaviour more explicit.</summary>
    <published>2014-11-06T22:05:54+00:00</published>
  </entry>
</feed>
