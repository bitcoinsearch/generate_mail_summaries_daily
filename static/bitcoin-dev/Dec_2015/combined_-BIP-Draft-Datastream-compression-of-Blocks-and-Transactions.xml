<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [BIP Draft] Datastream compression of Blocks and Transactions</title>
  <updated>2023-05-19T22:29:08.291894+00:00</updated>
  <author>
    <name>Matt Corallo 2015-12-04 13:30:33</name>
  </author>
  <author>
    <name>Matt Corallo 2015-12-02 22:23:47</name>
  </author>
  <link href="bitcoin-dev/Dec_2015/011855_-BIP-Draft-Datastream-compression-of-Blocks-and-Transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/011847_-BIP-Draft-Datastream-compression-of-Blocks-and-Transactions.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [BIP Draft] Datastream compression of Blocks and Transactions</title>
    <updated>2023-05-19T22:29:08.291894+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011855.html" rel="alternate"/>
    <summary>The email exchange on the bitcoin-dev mailing list on December 2, 2015, focused on the proposed BIP 152, which suggested using compression to reduce bandwidth for users in regions where they are subject to caps. Matt Corallo and Peter Tschipper had differing opinions on the potential benefits of compression. While Matt believed that adding compression would add additional complexity and attack surface, and that syncing over slow and/or restrictive connections could be improved with a sync-over-http-via-cdn protocol rather than the p2p protocol, Peter argued that the performance gain from compressing data would be cumulative and mainly benefit the sending of packets over the network.Emin GÃ¼n Sirer also joined the discussion, suggesting that while many compression engines were tested, the Lempel-Ziv family of compressors, which are usually based on "compression tables," may not be as compact as they could be for binary data and do not take advantage of structured reuse of certain byte sequences in the Bitcoin wire protocol. He proposed building a custom, Bitcoin-aware compressor that could achieve much higher compression ratios. While there are concerns about the additional complexity and attack surface that compressed data could bring, the potential benefits include additional throughput at no cost.Peter Tschipper recommended using LZO, which has been around for 20 years with very few problems, while still supporting multiple compression libraries. If Bitcoin is to be compressed, a programming challenge or contest would be one of the best ways to find the best possible, Bitcoin-specific compressor. This exercise would attract new programmers into the ecosystem and allow for the discovery of the limits of compressibility for Bitcoin bits on a wire. The results would be interesting even if the final compression engine is not enabled by default or merged.</summary>
    <published>2015-12-04T13:30:33+00:00</published>
  </entry>
</feed>
