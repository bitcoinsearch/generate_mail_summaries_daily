<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Segregated Witness features wish list</title>
  <updated>2023-05-19T22:45:35.325104+00:00</updated>
  <author>
    <name>Gregory Maxwell 2015-12-10 09:51:23</name>
  </author>
  <author>
    <name>Gregory Maxwell 2015-12-10 08:26:04</name>
  </author>
  <author>
    <name>Pieter Wuille 2015-12-13 18:07:01</name>
  </author>
  <link href="bitcoin-dev/Dec_2015/011940_Segregated-Witness-features-wish-list.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/011938_Segregated-Witness-features-wish-list.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/011962_Segregated-Witness-features-wish-list.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Segregated Witness features wish list</title>
    <updated>2023-05-19T22:45:35.326104+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011940.html" rel="alternate"/>
    <summary>A bitcoin-developer jl2012 discusses Segregated Witness (SW) and its implementation details in a mailing thread. The consensus among the developers is to implement SW as soon as possible without binding it with any additional script enhancements. SW was designed to make future script changes easier by having 'version' byte(s) at the start of the witness program. If the witness program prefix is unrecognized, it means RETURN TRUE. This captures the intended behavior of OP_VER in the earliest versions of the software while avoiding hard forks. The minimal consensus rule changes needed for segwit soft fork are listed, which include renaming OP_NOP4 as OP_SEGWIT, a script with OP_SEGWIT must fail if the scriptSig is not completely empty, using only one push in scriptPubKey or redeemscript as witness program, and defining version bytes to interpret the serialized scripts. The rules allow segwit inside P2SH but not the other way around. Operations like multiplication and division may be risky over arbitrary bignums. The developer proposes introducing stack flag on every manipulation instruction.</summary>
    <published>2015-12-10T09:51:23+00:00</published>
  </entry>
</feed>
