<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Multiparty signatures</title>
  <updated>2023-05-20T17:27:00.745095+00:00</updated>
  <author>
    <name>Gregory Maxwell 2018-07-09 16:58:38</name>
  </author>
  <author>
    <name>Gregory Maxwell 2018-07-09 16:21:59</name>
  </author>
  <author>
    <name>Gregory Maxwell 2018-07-09 15:59:28</name>
  </author>
  <author>
    <name>Pieter Wuille 2018-07-09 04:39:56</name>
  </author>
  <author>
    <name>Gregory Maxwell 2018-07-08 21:01:36</name>
  </author>
  <author>
    <name>Pieter Wuille 2018-07-09 02:33:06</name>
  </author>
  <author>
    <name>Pieter Wuille 2018-07-09 02:29:19</name>
  </author>
  <author>
    <name>Erik Aronesty 2018-07-08 14:19:52</name>
  </author>
  <link href="bitcoin-dev/July_2018/016233_Multiparty-signatures.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016230_Multiparty-signatures.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016229_Multiparty-signatures.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016225_Multiparty-signatures.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016219_Multiparty-signatures.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016224_Multiparty-signatures.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016223_Multiparty-signatures.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016215_Multiparty-signatures.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Multiparty signatures</title>
    <updated>2023-05-20T17:27:00.745095+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016233.html" rel="alternate"/>
    <summary>A discussion on the security of multisignatures and threshold signatures in Bitcoin took place between developers. The conversation centered around using the original Schnorr construction for multiparty signing, which is secure against participants adaptively choosing their keys. A pre-processing method called Musig was introduced, which works by preprocessing on the keys and then continuing on with the naive protocol. However, it was found to be vulnerable to an attacker knowing a victim pubkey P who uses Wagner's algorithm to solve a random modular subset sum problem. A new proposal was suggested that would allow m of n devices to sign a transaction without any of them knowing a private key at all. Each device can roll a random number as a share and the interpolation of that is the private key. The public shares can be broadcast and combined, and signature shares can also be broadcast and combined. This proposal was compared to the already possible threshold signature scheme using Schnorr signatures, which are provably secure in the random oracle model assuming the discrete logarithm problem is hard in the used group.</summary>
    <published>2018-07-09T16:58:38+00:00</published>
  </entry>
</feed>
