<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Derivation Paths for Single Key Taproot Scripts</title>
  <updated>2023-05-21T02:51:35.933725+00:00</updated>
  <author>
    <name>Andrew Chow 2021-07-02 20:03:20</name>
  </author>
  <author>
    <name>Andrew Chow 2021-06-23 01:17:01</name>
  </author>
  <link href="bitcoin-dev/July_2021/019179_Derivation-Paths-for-Single-Key-Taproot-Scripts.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2021/019096_Derivation-Paths-for-Single-Key-Taproot-Scripts.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Derivation Paths for Single Key Taproot Scripts</title>
    <updated>2023-05-21T02:51:35.933725+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019179.html" rel="alternate"/>
    <summary>The proposed BIP, put forward by Andrew Chow on June 22, 2021, suggests a derivation scheme for HD wallets whose keys are involved in single key P2TR outputs as the Taproot internal key. The purpose level path is identified as 'm/86' and is intended for the Taproot internal key, which should then be tweaked with the hash of itself as recommended by BIP 341.This BIP defines the two necessary steps to derive multiple deterministic addresses based on a BIP 32 master private key. To derive a public key from the root account, it uses the same account-structure as defined in BIPs 44, 49, and 84 but with a different purpose value for the script type. For address derivation, it uses the method recommended in BIP 341.The derived keys should not be used directly as the Taproot output pubkey. New version bytes for extended key serialization are not specified because of the advent of descriptors. While this BIP feels somewhat unnecessary, it is required to drive adoption and implementation of Taproot into software and hardware wallets.With the usage of single key P2TR transactions, a common derivation scheme is useful so HD wallets that only have a backup of the HD seed can recover single key Taproot outputs. The same approach used in BIPs 49 and 84 is largely used for ease of implementation. However, this BIP is not backwards compatible by design. An incompatible wallet will not discover these accounts at all and the user will notice that something is wrong.Test vectors are yet to be determined. Nevertheless, since it uses the same method as BIPs 44, 49, and 84, it should not be difficult to implement.</summary>
    <published>2021-07-02T20:03:20+00:00</published>
  </entry>
</feed>
