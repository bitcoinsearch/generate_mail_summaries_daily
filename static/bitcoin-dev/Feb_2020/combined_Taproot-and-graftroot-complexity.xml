<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Taproot (and graftroot) complexity</title>
  <updated>2023-05-20T21:44:58.553610+00:00</updated>
  <author>
    <name>Anthony Towns 2020-02-10 00:20:11</name>
  </author>
  <author>
    <name>Matt Corallo 2020-02-09 20:40:27</name>
  </author>
  <author>
    <name>Bryan Bishop 2020-02-09 20:19:55</name>
  </author>
  <link href="bitcoin-dev/Feb_2020/017622_Taproot-and-graftroot-complexity.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017617_Taproot-and-graftroot-complexity.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2020/017614_Taproot-and-graftroot-complexity.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Taproot (and graftroot) complexity</title>
    <updated>2023-05-20T21:44:58.553610+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-February/017622.html" rel="alternate"/>
    <summary>A recent discussion in the Bitcoin developers' forum has raised concerns about the benefits and development of Taproot. One developer, Bryan Bishop, expressed confusion on the development of Taproot and Graftroot. However, another developer explained that the main benefit of Taproot is that it allows users to change from a "if you lose this key, your funds are gone" to a "if you lose this key, you'll have to recover 3 of your 5 backup keys that you sent to trusted friends". The developer also noted that graftroot isn't as efficient as taproot due to non-interactive half-signature aggregation.In terms of taproot's technical aspects, one developer discussed the difference between a merkle branch and a taproot alternative. While both have similar shapes, with a merkle branch, users must reveal something about the path not taken. With taproot, however, there's no need to reveal anything about the path not taken, which makes it more efficient. However, the math only works out as an improvement if the common case is a simple key path spend. Additionally, taproot can be combined with a merkle tree arbitrarily.The discussion is centered around the deployment of Taproot, which is a proposed upgrade to the Bitcoin protocol that would allow for more complex smart contracts while improving privacy and efficiency. The question of whether Taproot is riskier than bare MAST and Schnorr separately is discussed, with the conclusion being that most of the risk is in getting the details right. Several alternative deployment paths for Taproot are discussed, including separate soft-forks for Merkle Branch Witnesses based on Taproot, Schnorr Signatures, and enabling Taproot and Graftroot. The suggestion is made that splitting these upgrades up does not make much sense, as they are interconnected. Overall, the discussion provides insight into the complexities of upgrading the Bitcoin protocol and the various considerations involved in deploying Taproot.A group of anonymous developers have sent a message discussing their concerns about Taproot and its development. They prefer to remain anonymous to keep the focus on technical issues rather than personal politics. The group discusses the design merits of Taproot versus simpler alternatives, proposes an alternative path for deploying the technologies described in BIP-340, BIP-341, and BIP-342, and suggests a modification to reduce some of the overhead.The group proposes an alternative solution to decrease extra fees using a witness type that is either a MAST hash OR a schnorr key (but not a Taproot). This fix can also be used in Taproot in place of a NUMS point, to decrease extra fees. However, it's unclear if this plays negatively with any future batch validation mechanism.A group of developers has raised concerns about the Taproot upgrade for Bitcoin, suggesting that simpler alternatives should be considered instead. The group questions whether Taproot is actually more private and cheaper than other methods, and also raises concerns about its security and the development model of combining multiple features at once. The developers propose an alternative path forward, suggesting three separate soft forks: one for Merkle Branch Witnesses based on Taproot, one for Schnorr Signatures, and a follow-up fork to enable Taproot and Graftroot. They believe this approach would be more conservative and allow for real-world protocol engineering experience before moving forward with Taproot. However, they do not strongly advocate against deploying Taproot at this point.</summary>
    <published>2020-02-10T00:20:11+00:00</published>
  </entry>
</feed>
