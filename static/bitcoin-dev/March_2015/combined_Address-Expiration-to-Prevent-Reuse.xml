<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Address Expiration to Prevent Reuse</title>
  <updated>2023-05-19T20:01:21.099866+00:00</updated>
  <author>
    <name>Gregory Maxwell 2015-03-26 23:00:50</name>
  </author>
  <author>
    <name>Gregory Maxwell 2015-03-26 21:44:11</name>
  </author>
  <author>
    <name>Gregory Maxwell 2015-03-25 19:22:58</name>
  </author>
  <author>
    <name>Gregory Maxwell 2015-03-27 03:13:06</name>
  </author>
  <author>
    <name>Gregory Maxwell 2015-03-26 20:42:55</name>
  </author>
  <author>
    <name>Gregory Maxwell 2015-03-25 16:34:36</name>
  </author>
  <link href="bitcoin-dev/March_2015/007746_Address-Expiration-to-Prevent-Reuse.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007742_Address-Expiration-to-Prevent-Reuse.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007737_Address-Expiration-to-Prevent-Reuse.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007749_Address-Expiration-to-Prevent-Reuse.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007739_Address-Expiration-to-Prevent-Reuse.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007735_Address-Expiration-to-Prevent-Reuse.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Address Expiration to Prevent Reuse</title>
    <updated>2023-05-19T20:01:21.100866+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-March/007746.html" rel="alternate"/>
    <summary>In an email exchange, Tom Harding discusses the idea of limited-lifetime addresses. He says that this concept was discussed on July 15, 2014. The motivation for address expiration is to reduce the rate of increase of the massive pile of Bitcoin addresses out there. However, it is suggested by others that this should not be enforced by default since it's not recommended to use the same pubkey more than once. Additionally, the protocol was not designed this way. Tom clarifies that the encoding of an expiration into the address people are using and specifying that clients enforce it can accomplish this goal. Tom also notes that a simpler, safer, client-enforced behavior is preferable. If users go hack their client to make a payment that isn't according to the payee, they have to live with the results as we can't prevent that in a strong sense.The sender is always able to intentionally hide their payment under a rock. The defense against that is to not accept payments not made according to the payee's specification. To reject reused scriptPubKeys, you must remember past scriptPubkeys to test against them. For illustration purposes, imagine a Bitcoin system where there is only a single base unit available for trade. Verification of that chain requires O(1) storage, while verification with duplicate elimination requires O(N) storage. Thy Shizzle proposes that the government issue addresses for use by a business and then all transactions can be tracked for that business entity. Tom believes that would be a serious attack on the design of Bitcoin, which obtains privacy and fungibility, both essential properties of any money-like good, almost exclusively through avoiding reuse. Tom advises Thy Shizzle to inform the "country-specific Bitcoin group" that they shouldn't speak for the users of a system which they do not understand.Tom addressed the issue of limiting the duplicate check to an X-block segment, with X being hard-coded in this simple scheme (X=144  =&gt; "1-day addresses"). He thinks that a simpler, safer, client-enforced behavior is preferable. Someone who wants to hack their client to make a payment that isn't according to the payee will have to live with the results since we can't prevent that in a strong sense.</summary>
    <published>2015-03-26T23:00:50+00:00</published>
  </entry>
</feed>
