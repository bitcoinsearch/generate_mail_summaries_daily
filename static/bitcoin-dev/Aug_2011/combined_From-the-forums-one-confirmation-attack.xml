<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - From the forums: one-confirmation attack</title>
  <updated>2023-05-19T02:48:07.946548+00:00</updated>
  <author>
    <name>Gregory Maxwell 2011-08-18 17:27:29</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-08-18 16:46:17</name>
  </author>
  <link href="bitcoin-dev/Aug_2011/000380_From-the-forums-one-confirmation-attack.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000378_From-the-forums-one-confirmation-attack.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - From the forums: one-confirmation attack</title>
    <updated>2023-05-19T02:48:07.946548+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-August/000380.html" rel="alternate"/>
    <summary>In a discussion between theymos and Gavin Andresen on August 18, 2011, they talked about the potential for double-spend attacks. Theymos suggested that nodes should relay new transactions as if they had received them normally to prevent the attack. However, Gavin pointed out that attackers could release the block and conflicting transaction at the same time or inject the conflicting transaction into different places in the network simultaneously. They discussed possible solutions, including waiting for a certain number of blocks before confirming a transaction, which would provide robustness against almost all attack patterns. Gavin also shared an attack pattern from a few weeks prior where an attacker creates widely distributed Sybil nodes to create network partitions. The attacker then creates two accounts at MoronBank and makes deposits in both partitions, along with conflicting transactions. The attack doesn't require the attacker to have any hash power and externalizes the lost income from orphaned blocks to victimized miners. However, the attack can be prevented by adding manually configured peerings to nodes. Unfortunately, there is no current software for this solution, and major pools seem to lack interest in participating.</summary>
    <published>2011-08-18T17:27:29+00:00</published>
  </entry>
</feed>
