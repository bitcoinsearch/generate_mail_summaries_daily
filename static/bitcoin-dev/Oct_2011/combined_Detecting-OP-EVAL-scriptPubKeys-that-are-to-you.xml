<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Detecting OP_EVAL scriptPubKeys that are to you</title>
  <updated>2023-05-19T02:54:14.727776+00:00</updated>
  <author>
    <name>Gregory Maxwell 2011-10-27 09:08:53</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-10-26 14:03:20</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-10-25 14:49:45</name>
  </author>
  <link href="bitcoin-dev/Oct_2011/000696_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000693_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000690_Detecting-OP-EVAL-scriptPubKeys-that-are-to-you.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Detecting OP_EVAL scriptPubKeys that are to you</title>
    <updated>2023-05-19T02:54:14.727776+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-October/000696.html" rel="alternate"/>
    <summary>The discussion revolves around the proposal of checkmultisig as a standard transaction type. Michael Grønager opposes checkmultisig and supports the concept of a clean boundary where cryptographic keys can be mapped to assets. He is concerned that the misunderstanding of bijection between hash160s and public keys, and one between ECC private keys and spendable transactions, will moot the flexibility of the script system. The confusion may result in tools being rendered insecure by unexpected transaction types. He also highlights the importance of being able to extract transaction to/from you only from your private keys. Michael Grønager mentions that there is no functional difference between the current system and the proposed checkmultisig as a standard transaction type. He further states that clients cannot expect to identify funds without knowing the information required. A coin is not yours unless you know all of the right bits; knowing some is not good enough. He asks how else the advantages of op_eval can be gained without it and how he can secure his wallet under whatever scheme he likes.Regarding the projects such as blockexplorer, bitcoin-js, and Michael Grønager's own tiered implementation for thin clients, he says if we introduce a standard multikey payment that hides the address or makes it overly complicated to extract it, it will be a major problem for these projects. These projects will be able to use the same procedure to extract the identifying information. If the former (ripemd160(sha256(pubkey))) is not a problem for these applications, why is the latter (ripemd160(sha256([some extra bytes generated by the wallet holder] || pubkey)))?Gavin Andresen suggests giving the hash to whoever is paying you and storing the hash--&gt;script mapping when you do that. He also mentions that if he didn't get your address from you or through a negotiation with you, he can't expect you to receive them.</summary>
    <published>2011-10-27T09:08:53+00:00</published>
  </entry>
</feed>
