<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - eltoo: A Simplified update Mechanism for Lightning and Off-Chain Contracts</title>
  <updated>2023-05-20T05:29:08.012281+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2018-05-07 23:26:05</name>
  </author>
  <author>
    <name>Christian Decker 2018-04-30 15:41:38</name>
  </author>
  <link href="bitcoin-dev/May_2018/015928_eltoo-A-Simplified-update-Mechanism-for-Lightning-and-Off-Chain-Contracts.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2018/015907_eltoo-A-Simplified-update-Mechanism-for-Lightning-and-Off-Chain-Contracts.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - eltoo: A Simplified update Mechanism for Lightning and Off-Chain Contracts</title>
    <updated>2023-05-20T05:29:08.012281+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015928.html" rel="alternate"/>
    <summary>The introduction of symmetric state in the BOLT spec has reintroduced a dependency between the CSV value of the commitment and the HTLC timeouts. This was pointed out by Mats in the past. The dependency meant that allowing long CSV time outs would increase the total CLTV timeout along the entire route. As a result, the 2-stage HTLC scheme was moved to address this issue. However, with symmetric state, the 2-stage HTLC scheme does not apply.Due to this, the commitment transaction itself does not need to have any CSV delays within the Script branches of the outputs it creates. Instead, each of those outputs can be immediately spent as the challenge period has already elapsed, and from the PoV of the chain, this is now the "correct" commitment. As a side effect of the way the symmetric state changes the strategy around breach attempts, we may see more breach attempts (and therefore update transactions) on the chain since attempting to cheat w/ vanilla symmetric state is now "costless". However, with a commitment protocol that uses symmetric state, there are no further challenges after the latest update transaction has hit the chain and the clock instead starts ticking officially. As a result of this, the HTLC outputs would now be symmetric themselves, and look very much like an HTLC output that one would use in a vanilla on-chain cross-chain atomic swap.In other news, the Lightning Network teams have released a research paper on a new update mechanism for off-chain protocols called eltoo, which is a drop-in replacement for the penalty-based invalidation mechanism. Eltoo is enforceable by overriding subsequent states on-chain and is symmetric, ensuring that the last agreed-upon state is settled on-chain. The new mechanism addresses some of the issues encountered while specifying and implementing the Lightning Network, including removing the need to estimate fees ahead of time, and simplifying outsourcing since old states becoming public cannot hurt anyone anymore. Additionally, eltoo can be used as a generic update mechanism for an off-chain contract with a larger number of participants. However, a minor change to Bitcoin is required before implementing eltoo: the introduction of the SIGHASH_NOINPUT flag for signatures, which has been proposed in the eltoo paper. The community is invited to participate in its discussion to arrive at a consensus for using SIGHASH_NOINPUT so it can be accepted and included in a future soft fork of Bitcoin Script.</summary>
    <published>2018-05-07T23:26:05+00:00</published>
  </entry>
</feed>
