<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - OP_DIFFICULTY to enable difficulty hedges (bets) without an oracle and 3rd party.</title>
  <updated>2023-05-20T20:32:22.270801+00:00</updated>
  <author>
    <name>Pieter Wuille 2019-05-23 19:45:37</name>
  </author>
  <author>
    <name>Johnson Lau 2019-05-24 08:15:45</name>
  </author>
  <link href="bitcoin-dev/May_2019/016958_OP-DIFFICULTY-to-enable-difficulty-hedges-bets-without-an-oracle-and-3rd-party-.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2019/016968_OP-DIFFICULTY-to-enable-difficulty-hedges-bets-without-an-oracle-and-3rd-party-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - OP_DIFFICULTY to enable difficulty hedges (bets) without an oracle and 3rd party.</title>
    <updated>2023-05-20T20:32:22.270801+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-May/016958.html" rel="alternate"/>
    <summary>Tamas Blummer, a Bitcoin developer, has proposed a new way to hedge risks associated with difficulty changes in the mining process. He suggests using a transaction that uses nLocktime denominated in block height, which will be valid after the difficulty-adjusted block in the future. A new OP_DIFFICULTY opcode would put onto the stack the value of difficulty for the block the transaction is included into. The output script may then decide comparing that value with a strike which key can spend it. The input of the transaction would be a multi-sig escrow of those who entered the bet. The winner would broadcast. Blummer believes this solution could serve significant economic interest of Bitcoin's economy and would not introduce a third party. However, if the difficulty can be directly observed by the script language, the implementation of mempools would become complicated, and reasoning about the validity of chains of unconfirmed transactions would become harder because an unconfirmed predecessor may have conditions that change over time. Therefore, Blummer suggests having an assertion on the state outside of script (nLockTime for absolute time/height and nSequence for relative) and then having opcodes inside script that observe the assertion (OP_CLTV and OP_CSV). This makes script validity a single context-free yes or no that can be evaluated once. Blummer plans to draft a BIP for this proposal, as he believes this opcode would serve the significant economic interest of Bitcoin's economy. Meanwhile, a decentralized gamble like this could be easy to manipulate since the difficulty is determined entirely by the last block in a cycle.</summary>
    <published>2019-05-23T19:45:37+00:00</published>
  </entry>
</feed>
