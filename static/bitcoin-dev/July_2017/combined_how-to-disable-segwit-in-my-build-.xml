<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - how to disable segwit in my build?</title>
  <updated>2023-05-20T03:23:04.112459+00:00</updated>
  <author>
    <name>Anthony Towns 2017-07-13 01:48:26</name>
  </author>
  <author>
    <name>Gregory Maxwell 2017-07-13 01:04:19</name>
  </author>
  <link href="bitcoin-dev/July_2017/014773_how-to-disable-segwit-in-my-build-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2017/014772_how-to-disable-segwit-in-my-build-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - how to disable segwit in my build?</title>
    <updated>2023-05-20T03:23:04.112459+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-July/014773.html" rel="alternate"/>
    <summary>The context is a discussion on how to disable enforcement of segwit rules in bitcoin without unwanted side-effects. The writer wants some recent features but without the possibility that their node will activate segwit unless they choose to. The options available include signaling (or not signaling) support for segwit activation if you're a miner or run a mining pool, and enforcing (or not enforcing) the additional consensus rules associated with segwit if you're running a node. The latter option is likely what the writer is talking about. Activation of segwit is the collective action of the bitcoin ecosystem to start enforcing the segwit consensus rules after a sufficient majority of miners are signaling support. If the writer wants to disable enforcement of segwit rules, even if a majority of mining power signals activation, they can change the code and recompile to do so. But this is probably a bad idea as it will cause them to risk accepting blocks that nobody else in the network will accept, opening them up to higher risk of double spends. It may also cause them to be unable to peer with segwit enabled nodes after segwit is activated if their node is rejecting blocks with witness data because they think segwit is not enabled while others think it is enabled. To avoid these issues, they would need to stop setting the NODE_WITNESS p2p bit.The writer says they have been purposefully running bitcoin releases prior to 0.13.1 as a way to avoid the possible segwit activation until they are personally comfortable with it. However, it is not simple to do so correctly, and a number of things must be changed. Even if it were possible, it wouldn't be a supported configuration. Having a node that supports segwit won't make it more likely to activate, and a user's transactions will not use segwit just because their node supports it.The only reason the writer is aware of to intentionally not run with segwit support beyond just not having upgraded yet is a desire to try to temporarily have as their tip block a block that was actively stealing the segwit transactions of a third party. However, this doesn't seem desirable personally or publicly.</summary>
    <published>2017-07-13T01:48:26+00:00</published>
  </entry>
</feed>
