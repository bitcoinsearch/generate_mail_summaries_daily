<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - CAddrMan: Stochastic IP address manager</title>
  <updated>2023-05-19T03:00:01.475131+00:00</updated>
  <author>
    <name>Pieter Wuille 2012-01-30 02:31:02</name>
  </author>
  <author>
    <name>Gregory Maxwell 2012-01-31 07:17:07</name>
  </author>
  <author>
    <name>Gregory Maxwell 2012-01-31 02:57:31</name>
  </author>
  <link href="bitcoin-dev/Jan_2012/001100_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001118_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001115_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - CAddrMan: Stochastic IP address manager</title>
    <updated>2023-05-19T03:00:01.475131+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001100.html" rel="alternate"/>
    <summary>The Satoshi bitcoin client has implemented a specialized address manager based on a new principle to move towards IPv6 support. The new approach involves maintaining and indexing only a limited number of addresses in-memory, and occasionally dumping them to disk. This method is vulnerable to Sybil attacks where attackers may try to poison the entire address cache with addresses they control. To protect against this, two tables have been created: one that keeps actual connections and one that maintains untried/new addresses. Both tables are separated into several limited-size buckets, providing a level of protection against Sybil attacks. The implementation is available in pull request 787, but testing, comments, suggestions, and improvements are welcome. IRC bootstrapping mechanism has been questioned, and there is a suggestion of removing it due to ISPs tagging Bitcoin as malware. However, more mechanisms are important than just DNS and hardcoded seed nodes. Removing IRC would also remove a bit of code and reduce FUD. Users can addnode/addr.txt as an alternative to IRC, which could be enough, and if so, removing it is a good idea. Fixing IRC is essential if it is kept in the long run. IRC has some stupid behavior, promoting highly-partitioned nodes, and needs fixing. An updated irc.cpp has been suggested, staying connected for half an hour, using a random nick if not listening, reconnecting if more connections are needed, and joining two channels at random rather than one. Getting IRC off by default would be a good move since botnet allegations are terrible.</summary>
    <published>2012-01-30T02:31:02+00:00</published>
  </entry>
</feed>
