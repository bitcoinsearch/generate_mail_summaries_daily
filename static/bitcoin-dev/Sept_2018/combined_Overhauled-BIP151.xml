<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Overhauled BIP151</title>
  <updated>2023-05-20T17:41:37.644364+00:00</updated>
  <author>
    <name>Gregory Maxwell 2018-09-07 02:31:15</name>
  </author>
  <author>
    <name>Jonas Schnelli 2018-09-03 12:16:19</name>
  </author>
  <link href="bitcoin-dev/Sept_2018/016380_Overhauled-BIP151.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016355_Overhauled-BIP151.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Overhauled BIP151</title>
    <updated>2023-05-20T17:41:37.644364+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-September/016380.html" rel="alternate"/>
    <summary>The Bitcoin-dev mailing list is discussing various proposals to improve the confidentiality of peer-to-peer connections in the Bitcoin network. One proposal suggests using post-quantum (PQ) key exchange, while another proposes an encoding of public keys that provide indistinguishability from random bit strings. Participants in the discussion consider an attack model in which state-level parties may store encrypted traffic to decrypt later. While some argue that Bitcoin is not the right tool for this scenario, others suggest that using Bitcoin over Tor could at least offer some long-term confidentiality hedge. Key derivation and re-keying issues are also discussed.During work on the implementation of BIP151, it was discovered that the current published proposal could be further optimized. An overhauled BIP151 specification with some changes was written. Major changes include no longer requiring the v1 protocol for encryption handshake, removing the multi message envelope, introducing a new NODE_ENCRYPTED service bit, and length of a packet using a 3-byte integer with 23 available bits. The proposed AEAD could eventually be further optimized by reducing the number of rounds of ChaCha20. Peers violating the rekeying policy can be disconnected as a result of fingerprinting implementations.A ciphersuite that effectively "rekeys" every message would be preferred; however, no well-analyzed authenticated encryption mode has the fast erasure property. Low overhead padding is possible at the message level, but there are no other options for useful low overhead padding. Writing proposals in stone is not a good idea because proposals for messages where the overhead matters are upcoming, and IDs can be used instead of ASCII to avoid complexity and fingerprinting. Chacha20/Poly1305 is considered higher performance than AES-GCM when it matters.Some express concerns that improving security features could lead to a false impression of "bulletproof" security, but this argument is rejected by others who believe that improving security is always worthwhile. It is unclear whether the overhauled BIP151 specification should be published under a new BIP number or whether the existing 151 proposal should be changed.</summary>
    <published>2018-09-07T02:31:15+00:00</published>
  </entry>
</feed>
